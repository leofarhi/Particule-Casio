SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\leofa\OneDrive\Documents\CASIO\fx-9860G SDK\Tutoriel\string.cpp

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp     1    extern "C"
      string.cpp     2    {
      string.cpp     3    #include "fxlib.h"
      string.cpp     4    #include "LibText.h"
      string.cpp     5    #include "usefull.h"
      string.cpp     6    #include "math.h"
      string.cpp     7    #include "string.h"
      string.cpp     8    }
      string.cpp     9    #include "options.h"
      string.cpp    10    #include "string.h"
      string.cpp    11    #include "MonochromeLib.h"
      string.cpp    12    
      string.cpp    13    
      string.cpp    14    /************************************
      string.cpp    15    
      string.cpp    16    Classe remplacant les strings absentes du sdk :'(
      string.cpp    17    
      string.cpp    18    ************************************/
      string.cpp    19    
      string.cpp    20    String::~String()
      string.cpp    21    {
      string.cpp    22    if(sizeMax)delete[] stockage;
      string.cpp    23    size = 0;
      string.cpp    24    sizeMax = 0;
      string.cpp    25    }
      string.cpp    26    
      string.cpp    27    
      string.cpp    28    
      string.cpp    29     char* inttostring(int nombre, char* str )
P   00000000              _inttostring:                    ; function: inttostring
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    00000000 2FE6                   MOV.L       R14,@-R15
      string.cpp    30    {
      string.cpp    31    int i, length=0;
    00000002 E700                   MOV         #0,R7
    00000004 4F22                   STS.L       PR,@-R15
      string.cpp    32     str[0] = '0';
    00000006 E330                   MOV         #48,R3
      string.cpp    33    if(nombre)
    00000008 2448                   TST         R4,R4
    0000000A 8D26                   BT/S        L513
    0000000C 2530                   MOV.B       R3,@R5
      string.cpp    34        {
      string.cpp    35        if(nombre<0)
    0000000E 4411                   CMP/PZ      R4
    00000010 8D04                   BT/S        L514
      string.cpp    36            {
      string.cpp    37            length++;
      string.cpp    38            str[0] = '-';
      string.cpp    39            nombre = -nombre;
      string.cpp    40            }
      string.cpp    41        for(i=nombre ; i ; i/=10) length++;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000012 E60A                   MOV         #10,R6
    00000014 7701                   ADD         #1,R7
    00000016 E22D                   MOV         #45,R2
    00000018 2520                   MOV.B       R2,@R5
    0000001A 644B                   NEG         R4,R4
    0000001C              L514:                             
    0000001C A006                   BRA         L515
    0000001E 6E43                   MOV         R4,R14
    00000020              L516:                             
    00000020 D28D                   MOV.L       L629+2,R2  ; __divls
    00000022 7701                   ADD         #1,R7
    00000024 6063                   MOV         R6,R0
    00000026 420B                   JSR         @R2
    00000028 61E3                   MOV         R14,R1
    0000002A 6E03                   MOV         R0,R14
    0000002C              L515:                             
    0000002C 2EE8                   TST         R14,R14
    0000002E 8BF7                   BF          L516
      string.cpp    42        str[length] = 0;
    00000030 6073                   MOV         R7,R0
    00000032 E300                   MOV         #0,R3
    00000034 0534                   MOV.B       R3,@(R0,R5)
      string.cpp    43        for( ; nombre ; nombre/=10) str[--length] = nombre%10+'0';
    00000036 A00E                   BRA         L517
    00000038 0009                   NOP
    0000003A              L518:                             
    0000003A 77FF                   ADD         #-1,R7
    0000003C D387                   MOV.L       L629+6,R3  ; __modls
    0000003E 6253                   MOV         R5,R2
    00000040 327C                   ADD         R7,R2
    00000042 6143                   MOV         R4,R1
    00000044 430B                   JSR         @R3
    00000046 6063                   MOV         R6,R0
    00000048 7030                   ADD         #48,R0
    0000004A 2200                   MOV.B       R0,@R2
    0000004C D282                   MOV.L       L629+2,R2  ; __divls
    0000004E 6063                   MOV         R6,R0
    00000050 420B                   JSR         @R2
    00000052 6143                   MOV         R4,R1
    00000054 6403                   MOV         R0,R4
    00000056              L517:                             
    00000056 2448                   TST         R4,R4
    00000058 8BEF                   BF          L518
    0000005A              L513:                             
      string.cpp    44        }
      string.cpp    45    return str;
    0000005A 6053                   MOV         R5,R0
      string.cpp    46    }
    0000005C 4F26                   LDS.L       @R15+,PR
    0000005E 000B                   RTS
    00000060 6EF6                   MOV.L       @R15+,R14
      string.cpp    47    
      string.cpp    48    
      string.cpp    49    void String::afficher(int X,int Y,int mode)
      string.cpp    50    {
      string.cpp    51    
      string.cpp    52    if(!mode)Txt_Text(getStr(),X,Y,Options::getFont(),TXT_OR);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp    53    else Txt_Text(getStr(),X,Y,Options::getFont(),TXT_ON);
      string.cpp    54    }
      string.cpp    55    
      string.cpp    56    
      string.cpp    57    String::String(int nombre)
      string.cpp    58    {
      string.cpp    59    
      string.cpp    60    size = 0;
      string.cpp    61    sizeMax = 0;
      string.cpp    62     char str[12] = {0};
      string.cpp    63    inttostring(nombre,str);
      string.cpp    64    add(str);
      string.cpp    65    }
      string.cpp    66    
      string.cpp    67    String::String(unsigned char* str)
      string.cpp    68    {
      string.cpp    69    size = 0;
      string.cpp    70    sizeMax = 0;
      string.cpp    71    add((char*)str);
      string.cpp    72    }
      string.cpp    73    
      string.cpp    74    String::String(char* str)
      string.cpp    75    {
      string.cpp    76    size = 0;
      string.cpp    77    sizeMax = 0;
      string.cpp    78    add(( char*)str);
      string.cpp    79    }
      string.cpp    80    
      string.cpp    81    
      string.cpp    82    char* String::getStr()
      string.cpp    83    {
      string.cpp    84    return (char*)stockage;
      string.cpp    85    }
      string.cpp    86    
      string.cpp    87    
      string.cpp    88    unsigned char* String::getStrU()
      string.cpp    89    {
      string.cpp    90    return (unsigned char*)stockage;
      string.cpp    91    }
      string.cpp    92    
      string.cpp    93    void String::operator+=(unsigned char* str)
      string.cpp    94    {
      string.cpp    95    add(( char*)str);
      string.cpp    96    }
      string.cpp    97    
      string.cpp    98    void String::operator+=(char* str)
      string.cpp    99    {
      string.cpp   100    add(( char*)str);
      string.cpp   101    }
      string.cpp   102    
      string.cpp   103    
      string.cpp   104    void String::operator+=(unsigned char nombre)
      string.cpp   105    {
      string.cpp   106     char str[5] = {0};
      string.cpp   107    inttostring((int)nombre,str);
      string.cpp   108    add(( char*)str);
      string.cpp   109    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   110    
      string.cpp   111    void String::operator+=(int nombre)
      string.cpp   112    {
      string.cpp   113     char str[12] = {0};
      string.cpp   114    inttostring(nombre,str);
      string.cpp   115    add(( char*)str);
      string.cpp   116    }
      string.cpp   117    
      string.cpp   118    
      string.cpp   119    void memcpyT(char* dest,char* source,int byte)
    00000062              _memcpyT__FPcT1i:                ; function: memcpyT(char *, char *, int)
                                                           ; frame size=0
    00000062 6063                   MOV         R6,R0
      string.cpp   120    {
      string.cpp   121    for(int i = 0;i<byte;i++)dest[i]=source[i];
    00000064 E700                   MOV         #0,R7
    00000066 E100                   MOV         #0,R1
    00000068 315C                   ADD         R5,R1
    0000006A E500                   MOV         #0,R5
    0000006C 4015                   CMP/PL      R0
    0000006E 8F06                   BF/S        L520
    00000070 354C                   ADD         R4,R5
    00000072              L521:                             
    00000072 7701                   ADD         #1,R7
    00000074 6314                   MOV.B       @R1+,R3
    00000076 3703                   CMP/GE      R0,R7
    00000078 2530                   MOV.B       R3,@R5
    0000007A 8FFA                   BF/S        L521
    0000007C 7501                   ADD         #1,R5
    0000007E              L520:                             
      string.cpp   122    dest[byte]=0;
    0000007E E300                   MOV         #0,R3
      string.cpp   123    
      string.cpp   124    }
    00000080 000B                   RTS
    00000082 0434                   MOV.B       R3,@(R0,R4)
    00000084              ___ct__6StringFPUc:              ; function: String::String(unsigned char *)
                                                           ; frame size=12
    00000084 4F22                   STS.L       PR,@-R15
    00000086 7FF8                   ADD         #-8,R15
    00000088 2F42                   MOV.L       R4,@R15
    0000008A 1F51                   MOV.L       R5,@(4,R15)
    0000008C 63F2                   MOV.L       @R15,R3
    0000008E 2338                   TST         R3,R3
    00000090 8B05                   BF          L524
    00000092 D373                   MOV.L       L629+10,R3 ; ___nw__FUl
    00000094 430B                   JSR         @R3
    00000096 E40C                   MOV         #12,R4
    00000098 2008                   TST         R0,R0
    0000009A 8D09                   BT/S        L523
    0000009C 2F02                   MOV.L       R0,@R15
    0000009E              L524:                             
    0000009E E400                   MOV         #0,R4
    000000A0 62F2                   MOV.L       @R15,R2
    000000A2 2242                   MOV.L       R4,@R2
    000000A4 63F2                   MOV.L       @R15,R3
    000000A6 1341                   MOV.L       R4,@(4,R3)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000A8 D36E                   MOV.L       L629+14,R3 ; _add__6StringFPc
    000000AA 55F1                   MOV.L       @(4,R15),R5
    000000AC 430B                   JSR         @R3
    000000AE 64F2                   MOV.L       @R15,R4
    000000B0              L523:                             
    000000B0 60F2                   MOV.L       @R15,R0
    000000B2 7F08                   ADD         #8,R15
    000000B4 4F26                   LDS.L       @R15+,PR
    000000B6 000B                   RTS
    000000B8 0009                   NOP
    000000BA              ___ct__6StringFPc:               ; function: String::String(char *)
                                                           ; frame size=12
    000000BA 4F22                   STS.L       PR,@-R15
    000000BC 7FF8                   ADD         #-8,R15
    000000BE 2F42                   MOV.L       R4,@R15
    000000C0 1F51                   MOV.L       R5,@(4,R15)
    000000C2 63F2                   MOV.L       @R15,R3
    000000C4 2338                   TST         R3,R3
    000000C6 8B05                   BF          L527
    000000C8 D365                   MOV.L       L629+10,R3 ; ___nw__FUl
    000000CA 430B                   JSR         @R3
    000000CC E40C                   MOV         #12,R4
    000000CE 2008                   TST         R0,R0
    000000D0 8D09                   BT/S        L526
    000000D2 2F02                   MOV.L       R0,@R15
    000000D4              L527:                             
    000000D4 62F2                   MOV.L       @R15,R2
    000000D6 E400                   MOV         #0,R4
    000000D8 2242                   MOV.L       R4,@R2
    000000DA 63F2                   MOV.L       @R15,R3
    000000DC 1341                   MOV.L       R4,@(4,R3)
    000000DE D361                   MOV.L       L629+14,R3 ; _add__6StringFPc
    000000E0 55F1                   MOV.L       @(4,R15),R5
    000000E2 430B                   JSR         @R3
    000000E4 64F2                   MOV.L       @R15,R4
    000000E6              L526:                             
    000000E6 60F2                   MOV.L       @R15,R0
    000000E8 7F08                   ADD         #8,R15
    000000EA 4F26                   LDS.L       @R15+,PR
    000000EC 000B                   RTS
    000000EE 0009                   NOP
    000000F0              ___ct__6StringFi:                ; function: String::String(int)
                                                           ; frame size=32
    000000F0 2FE6                   MOV.L       R14,@-R15
    000000F2 4F22                   STS.L       PR,@-R15
    000000F4 7FE8                   ADD         #-24,R15
    000000F6 2F42                   MOV.L       R4,@R15
    000000F8 1F51                   MOV.L       R5,@(4,R15)
    000000FA 63F2                   MOV.L       @R15,R3
    000000FC 2338                   TST         R3,R3
    000000FE 8B05                   BF          L530
    00000100 D357                   MOV.L       L629+10,R3 ; ___nw__FUl
    00000102 430B                   JSR         @R3
    00000104 E40C                   MOV         #12,R4
    00000106 2008                   TST         R0,R0
    00000108 8D1C                   BT/S        L529
    0000010A 2F02                   MOV.L       R0,@R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010C              L530:                             
    0000010C 62F2                   MOV.L       @R15,R2
    0000010E E60C                   MOV         #12,R6
    00000110 EE00                   MOV         #0,R14
    00000112 65E3                   MOV         R14,R5
    00000114 22E2                   MOV.L       R14,@R2
    00000116 64F3                   MOV         R15,R4
    00000118 63F2                   MOV.L       @R15,R3
    0000011A 13E1                   MOV.L       R14,@(4,R3)
    0000011C D352                   MOV.L       L629+18,R3 ; _memset
    0000011E 430B                   JSR         @R3
    00000120 740C                   ADD         #12,R4
    00000122 E60C                   MOV         #12,R6
    00000124 D250                   MOV.L       L629+18,R2 ; _memset
    00000126 65E3                   MOV         R14,R5
    00000128 64F3                   MOV         R15,R4
    0000012A 420B                   JSR         @R2
    0000012C 740C                   ADD         #12,R4
    0000012E 60E3                   MOV         R14,R0
    00000130 80FC                   MOV.B       R0,@(12,R15)
    00000132 65F3                   MOV         R15,R5
    00000134 750C                   ADD         #12,R5
    00000136 1F52                   MOV.L       R5,@(8,R15)
    00000138 BF62                   BSR         _inttostring
    0000013A 54F1                   MOV.L       @(4,R15),R4
    0000013C D249                   MOV.L       L629+14,R2 ; _add__6StringFPc
    0000013E 55F2                   MOV.L       @(8,R15),R5
    00000140 420B                   JSR         @R2
    00000142 64F2                   MOV.L       @R15,R4
    00000144              L529:                             
    00000144 60F2                   MOV.L       @R15,R0
    00000146 7F18                   ADD         #24,R15
    00000148 4F26                   LDS.L       @R15+,PR
    0000014A 000B                   RTS
    0000014C 6EF6                   MOV.L       @R15+,R14
    0000014E              ___dt__6StringFv:                ; function: String::~String()
                                                           ; frame size=12
    0000014E 2FE6                   MOV.L       R14,@-R15
    00000150 4F22                   STS.L       PR,@-R15
    00000152 6E43                   MOV         R4,R14
    00000154 7FFC                   ADD         #-4,R15
    00000156 2EE8                   TST         R14,R14
    00000158 8D12                   BT/S        L535
    0000015A 2F52                   MOV.L       R5,@R15
    0000015C 52E1                   MOV.L       @(4,R14),R2
    0000015E 2228                   TST         R2,R2
    00000160 8902                   BT          L533
    00000162 D342                   MOV.L       L629+22,R3 ; ___dl__FPv
    00000164 430B                   JSR         @R3
    00000166 54E2                   MOV.L       @(8,R14),R4
    00000168              L533:                             
    00000168 E400                   MOV         #0,R4
    0000016A 2E42                   MOV.L       R4,@R14
    0000016C 1E41                   MOV.L       R4,@(4,R14)
    0000016E 60F2                   MOV.L       @R15,R0
    00000170 C801                   TST         #1,R0
    00000172 8905                   BT          L535




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000174 D23D                   MOV.L       L629+22,R2 ; ___dl__FPv
    00000176 64E3                   MOV         R14,R4
    00000178 7F04                   ADD         #4,R15
    0000017A 4F26                   LDS.L       @R15+,PR
    0000017C 422B                   JMP         @R2
    0000017E 6EF6                   MOV.L       @R15+,R14
    00000180              L535:                             
    00000180 7F04                   ADD         #4,R15
    00000182 4F26                   LDS.L       @R15+,PR
    00000184 000B                   RTS
    00000186 6EF6                   MOV.L       @R15+,R14
    00000188              _getStr__6StringFv:              ; function: String::getStr()
                                                           ; frame size=0
    00000188 000B                   RTS
    0000018A 5042                   MOV.L       @(8,R4),R0
    0000018C              _getStrU__6StringFv:             ; function: String::getStrU()
                                                           ; frame size=0
    0000018C 000B                   RTS
    0000018E 5042                   MOV.L       @(8,R4),R0
    00000190              ___apl__6StringFPUc:             ; function: String::operator +=(unsigned char *)
                                                           ; frame size=0
    00000190 D334                   MOV.L       L629+14,R3 ; _add__6StringFPc
    00000192 432B                   JMP         @R3
    00000194 0009                   NOP
    00000196              ___apl__6StringFPc:              ; function: String::operator +=(char *)
                                                           ; frame size=0
    00000196 D333                   MOV.L       L629+14,R3 ; _add__6StringFPc
    00000198 432B                   JMP         @R3
    0000019A 0009                   NOP
    0000019C              ___apl__6StringFUc:              ; function: String::operator +=(unsigned char)
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    0000019C 4F22                   STS.L       PR,@-R15
    0000019E 6053                   MOV         R5,R0
    000001A0 D233                   MOV.L       L629+26,R2 ; L318
    000001A2 7FEC                   ADD         #-20,R15
    000001A4 D333                   MOV.L       L629+30,R3 ; __slow_mvn
    000001A6 61F3                   MOV         R15,R1
    000001A8 2F42                   MOV.L       R4,@R15
    000001AA 710C                   ADD         #12,R1
    000001AC 80F4                   MOV.B       R0,@(4,R15)
    000001AE 430B                   JSR         @R3
    000001B0 E005                   MOV         #5,R0
    000001B2 65F3                   MOV         R15,R5
    000001B4 750C                   ADD         #12,R5
    000001B6 1F52                   MOV.L       R5,@(8,R15)
    000001B8 84F4                   MOV.B       @(4,R15),R0
    000001BA 6403                   MOV         R0,R4
    000001BC BF20                   BSR         _inttostring
    000001BE 644C                   EXTU.B      R4,R4
    000001C0 D228                   MOV.L       L629+14,R2 ; _add__6StringFPc
    000001C2 55F2                   MOV.L       @(8,R15),R5
    000001C4 420B                   JSR         @R2
    000001C6 64F2                   MOV.L       @R15,R4
    000001C8 7F14                   ADD         #20,R15
    000001CA 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CC 000B                   RTS
    000001CE 0009                   NOP
    000001D0              ___apl__6StringFi:               ; function: String::operator +=(int)
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    000001D0 4F22                   STS.L       PR,@-R15
    000001D2 7FE8                   ADD         #-24,R15
    000001D4 D228                   MOV.L       L629+34,R2 ; L323
    000001D6 61F3                   MOV         R15,R1
    000001D8 D326                   MOV.L       L629+30,R3 ; __slow_mvn
    000001DA 710C                   ADD         #12,R1
    000001DC 2F42                   MOV.L       R4,@R15
    000001DE 1F51                   MOV.L       R5,@(4,R15)
    000001E0 430B                   JSR         @R3
    000001E2 E00C                   MOV         #12,R0
    000001E4 65F3                   MOV         R15,R5
    000001E6 750C                   ADD         #12,R5
    000001E8 1F52                   MOV.L       R5,@(8,R15)
    000001EA BF09                   BSR         _inttostring
    000001EC 54F1                   MOV.L       @(4,R15),R4
    000001EE D21D                   MOV.L       L629+14,R2 ; _add__6StringFPc
    000001F0 55F2                   MOV.L       @(8,R15),R5
    000001F2 420B                   JSR         @R2
    000001F4 64F2                   MOV.L       @R15,R4
    000001F6 7F18                   ADD         #24,R15
    000001F8 4F26                   LDS.L       @R15+,PR
    000001FA 000B                   RTS
    000001FC 0009                   NOP
      string.cpp   125    
      string.cpp   126    
      string.cpp   127    
      string.cpp   128    
      string.cpp   129    void String::add(char* str)
    000001FE              _add__6StringFPc:                ; function: String::add(char *)
                                                           ; frame size=20
    000001FE 2FE6                   MOV.L       R14,@-R15
    00000200 2FD6                   MOV.L       R13,@-R15
    00000202 6E43                   MOV         R4,R14
      string.cpp   130    {
      string.cpp   131    int i = 0;
      string.cpp   132    int taille = mesurer(str);
    00000204 D31D                   MOV.L       L629+38,R3 ; _mesurer__6StringFPc
    00000206 2FC6                   MOV.L       R12,@-R15
    00000208 2FB6                   MOV.L       R11,@-R15
    0000020A 6C53                   MOV         R5,R12
    0000020C 4F22                   STS.L       PR,@-R15
    0000020E 430B                   JSR         @R3
    00000210 ED00                   MOV         #0,R13
    00000212 6403                   MOV         R0,R4
      string.cpp   133    if(!taille)return;
    00000214 2448                   TST         R4,R4
    00000216 8946                   BT          L543
      string.cpp   134    char* temp = 0;
      string.cpp   135    if(!size)
    00000218 63E2                   MOV.L       @R14,R3
    0000021A 2338                   TST         R3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000021C 8B05                   BF          L544
      string.cpp   136        {
      string.cpp   137        sizeMax = 20+taille;
    0000021E 7414                   ADD         #20,R4
      string.cpp   138        stockage = new char[sizeMax];
    00000220 D30F                   MOV.L       L629+10,R3 ; ___nw__FUl
    00000222 430B                   JSR         @R3
    00000224 1E41                   MOV.L       R4,@(4,R14)
    00000226 A033                   BRA         L547
    00000228 1E02                   MOV.L       R0,@(8,R14)
    0000022A              L544:                             
      string.cpp   139        }
      string.cpp   140    else if(taille+size+5>sizeMax)
    0000022A 63E2                   MOV.L       @R14,R3
    0000022C 52E1                   MOV.L       @(4,R14),R2
    0000022E 334C                   ADD         R4,R3
    00000230 7305                   ADD         #5,R3
    00000232 3327                   CMP/GT      R2,R3
    00000234 8B2C                   BF          L547
      string.cpp   141        {
      string.cpp   142        sizeMax =size+taille+10;
    00000236 61E2                   MOV.L       @R14,R1
      string.cpp   143        temp = new char[sizeMax];
    00000238 D309                   MOV.L       L629+10,R3 ; ___nw__FUl
    0000023A 341C                   ADD         R1,R4
    0000023C 740A                   ADD         #10,R4
    0000023E 430B                   JSR         @R3
    00000240 1E41                   MOV.L       R4,@(4,R14)
    00000242 6B03                   MOV         R0,R11
      string.cpp   144        memcpyT(temp,stockage,size);
    00000244 66E2                   MOV.L       @R14,R6
    00000246 55E2                   MOV.L       @(8,R14),R5
    00000248 BF0B                   BSR         _memcpyT__FPcT1i
    0000024A 6403                   MOV         R0,R4
      string.cpp   145        delete[] stockage;
    0000024C D307                   MOV.L       L629+22,R3 ; ___dl__FPv
    0000024E 430B                   JSR         @R3
    00000250 54E2                   MOV.L       @(8,R14),R4
      string.cpp   146        stockage = temp;
      string.cpp   147        }
      string.cpp   148    for(;str[i];i++)stockage[i+size]=str[i];
    00000252 A01D                   BRA         L547
    00000254 1EB2                   MOV.L       R11,@(8,R14)
    00000256              L629:                             
    00000256 0000                   .DATA.W     0
    00000258 <00000000>             .DATA.L     __divls
    0000025C <00000000>             .DATA.L     __modls
    00000260 <00000000>             .DATA.L     ___nw__FUl
    00000264 <00000000>             .DATA.L     _add__6StringFPc
    00000268 <00000000>             .DATA.L     _memset
    0000026C <00000000>             .DATA.L     ___dl__FPv
    00000270 <00000000>             .DATA.L     L318
    00000274 <00000000>             .DATA.L     __slow_mvn
    00000278 <00000000>             .DATA.L     L323
    0000027C <00000000>             .DATA.L     _mesurer__6StringFPc
    00000280              L548:                             
    00000280 63E2                   MOV.L       @R14,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000282 33DC                   ADD         R13,R3
    00000284 50E2                   MOV.L       @(8,R14),R0
    00000286 330C                   ADD         R0,R3
    00000288 60D3                   MOV         R13,R0
    0000028A 7D01                   ADD         #1,R13
    0000028C 02CC                   MOV.B       @(R0,R12),R2
    0000028E 2320                   MOV.B       R2,@R3
    00000290              L547:                             
    00000290 60D3                   MOV         R13,R0
    00000292 03CC                   MOV.B       @(R0,R12),R3
    00000294 2338                   TST         R3,R3
    00000296 8BF3                   BF          L548
      string.cpp   149    size+=i;
    00000298 62E2                   MOV.L       @R14,R2
    0000029A 32DC                   ADD         R13,R2
    0000029C 2E22                   MOV.L       R2,@R14
      string.cpp   150    stockage[size]=0;
    0000029E 6323                   MOV         R2,R3
    000002A0 50E2                   MOV.L       @(8,R14),R0
    000002A2 E200                   MOV         #0,R2
    000002A4 0324                   MOV.B       R2,@(R0,R3)
      string.cpp   151    
      string.cpp   152    }
    000002A6              L543:                             
    000002A6 4F26                   LDS.L       @R15+,PR
    000002A8 6BF6                   MOV.L       @R15+,R11
    000002AA 6CF6                   MOV.L       @R15+,R12
    000002AC 6DF6                   MOV.L       @R15+,R13
    000002AE 000B                   RTS
    000002B0 6EF6                   MOV.L       @R15+,R14
    000002B2              _afficher__6StringFiN21:         ; function: String::afficher(int, int, int)
                                                           ; frame size=24
    000002B2 2778                   TST         R7,R7
    000002B4 4F22                   STS.L       PR,@-R15
    000002B6 7FF4                   ADD         #-12,R15
    000002B8 2F42                   MOV.L       R4,@R15
    000002BA 1F51                   MOV.L       R5,@(4,R15)
    000002BC 8F06                   BF/S        L549
    000002BE 1F62                   MOV.L       R6,@(8,R15)
    000002C0 D38F                   MOV.L       L630,R3    ; _getFont__7OptionsSFv
    000002C2 E201                   MOV         #1,R2
    000002C4 430B                   JSR         @R3
    000002C6 2F26                   MOV.L       R2,@-R15
    000002C8 A004                   BRA         L628
    000002CA 0009                   NOP
    000002CC              L549:                             
    000002CC D28C                   MOV.L       L630,R2    ; _getFont__7OptionsSFv
    000002CE E302                   MOV         #2,R3
    000002D0 420B                   JSR         @R2
    000002D2 2F36                   MOV.L       R3,@-R15
    000002D4              L628:                             
    000002D4 2F06                   MOV.L       R0,@-R15
    000002D6 D38B                   MOV.L       L630+4,R3  ; _getStr__6StringFv
    000002D8 430B                   JSR         @R3
    000002DA 54F2                   MOV.L       @(8,R15),R4
    000002DC 55F3                   MOV.L       @(12,R15),R5
    000002DE 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E0 56F4                   MOV.L       @(16,R15),R6
    000002E2 D389                   MOV.L       L630+8,R3  ; _Txt_Text
    000002E4 430B                   JSR         @R3
    000002E6 67F6                   MOV.L       @R15+,R7
    000002E8 7F10                   ADD         #16,R15
    000002EA 4F26                   LDS.L       @R15+,PR
    000002EC 000B                   RTS
    000002EE 0009                   NOP
      string.cpp   153    
      string.cpp   154    
      string.cpp   155    int String::mesurer(char* str)
      string.cpp   156    {
      string.cpp   157    for(int i = 0;;i++)if(!str[i])return i;
      string.cpp   158    }
      string.cpp   159    
      string.cpp   160    
      string.cpp   161    
      string.cpp   162    
      string.cpp   163    void String::afficherRetour(int x,int y)
    000002F0              _afficherRetour__6StringFiT1:    ; function: String::afficherRetour(int, int)
                                                           ; frame size=144
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    000002F0 2FE6                   MOV.L       R14,@-R15
    000002F2 2FD6                   MOV.L       R13,@-R15
    000002F4 2FC6                   MOV.L       R12,@-R15
    000002F6 6D43                   MOV         R4,R13
      string.cpp   164    {
      string.cpp   165    char vide[50]={0};
    000002F8 D284                   MOV.L       L630+12,R2 ; L347
    000002FA 2FB6                   MOV.L       R11,@-R15
    000002FC 2FA6                   MOV.L       R10,@-R15
    000002FE 6A63                   MOV         R6,R10
    00000300 D383                   MOV.L       L630+16,R3 ; __slow_mvn
    00000302 2F96                   MOV.L       R9,@-R15
    00000304 2F86                   MOV.L       R8,@-R15
    00000306 4F22                   STS.L       PR,@-R15
    00000308 7F94                   ADD         #-108,R15
    0000030A 68F3                   MOV         R15,R8
    0000030C 2F52                   MOV.L       R5,@R15
    0000030E 61F3                   MOV         R15,R1
    00000310 7838                   ADD         #56,R8
    00000312 7138                   ADD         #56,R1
    00000314 430B                   JSR         @R3
    00000316 E032                   MOV         #50,R0
      string.cpp   166    char temp[50]={0};
    00000318 D27E                   MOV.L       L630+20,R2 ; L349
    0000031A 69F3                   MOV         R15,R9
    0000031C D37C                   MOV.L       L630+16,R3 ; __slow_mvn
    0000031E 61F3                   MOV         R15,R1
    00000320 7904                   ADD         #4,R9
    00000322 7104                   ADD         #4,R1
    00000324 430B                   JSR         @R3
    00000326 E032                   MOV         #50,R0
      string.cpp   167    int start = 0;
    00000328 EC00                   MOV         #0,R12
      string.cpp   168    for(int i=1;stockage[i-1]!=0 && i<sizeMax;i++)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000032A A025                   BRA         L552
    0000032C EE01                   MOV         #1,R14
    0000032E              L553:                             
      string.cpp   169        {
      string.cpp   170        if(stockage[i] == '\n' || !stockage[i])
    0000032E 50D2                   MOV.L       @(8,R13),R0
    00000330 00EC                   MOV.B       @(R0,R14),R0
    00000332 880A                   CMP/EQ      #10,R0
    00000334 8D02                   BT/S        L555
    00000336 6403                   MOV         R0,R4
    00000338 2448                   TST         R4,R4
    0000033A 8B1C                   BF          L554
    0000033C              L555:                             
      string.cpp   171            {
      string.cpp   172            memcpyT(temp,vide,50);
    0000033C E632                   MOV         #50,R6
    0000033E 6583                   MOV         R8,R5
    00000340 6B93                   MOV         R9,R11
    00000342 BE8E                   BSR         _memcpyT__FPcT1i
    00000344 6493                   MOV         R9,R4
      string.cpp   173            memcpyT (temp,(char*)&stockage[start],i-start);
    00000346 66E3                   MOV         R14,R6
    00000348 55D2                   MOV.L       @(8,R13),R5
    0000034A 36C8                   SUB         R12,R6
    0000034C 35CC                   ADD         R12,R5
    0000034E BE88                   BSR         _memcpyT__FPcT1i
    00000350 64B3                   MOV         R11,R4
      string.cpp   174            start = i+1;
    00000352 6CE3                   MOV         R14,R12
      string.cpp   175            Txt_Text(temp,x,y,Options::getFont(),TXT_OR);
    00000354 D26A                   MOV.L       L630,R2    ; _getFont__7OptionsSFv
    00000356 E301                   MOV         #1,R3
    00000358 7C01                   ADD         #1,R12
    0000035A 420B                   JSR         @R2
    0000035C 2F36                   MOV.L       R3,@-R15
    0000035E 6703                   MOV         R0,R7
    00000360 55F1                   MOV.L       @(4,R15),R5
    00000362 66A3                   MOV         R10,R6
    00000364 D368                   MOV.L       L630+8,R3  ; _Txt_Text
    00000366 430B                   JSR         @R3
    00000368 64B3                   MOV         R11,R4
      string.cpp   176            y+=Options::getHauteurFont()+1;
    0000036A D26B                   MOV.L       L630+24,R2 ; _getHauteurFont__7OptionsSFv
    0000036C 420B                   JSR         @R2
    0000036E 7F04                   ADD         #4,R15
    00000370 600C                   EXTU.B      R0,R0
    00000372 7001                   ADD         #1,R0
    00000374 3A0C                   ADD         R0,R10
    00000376              L554:                             
    00000376 7E01                   ADD         #1,R14
    00000378              L552:                             
    00000378 50D2                   MOV.L       @(8,R13),R0
    0000037A 63E3                   MOV         R14,R3
    0000037C 73FF                   ADD         #-1,R3
    0000037E 023C                   MOV.B       @(R0,R3),R2
    00000380 2228                   TST         R2,R2
    00000382 8902                   BT          L557




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000384 51D1                   MOV.L       @(4,R13),R1
    00000386 3E13                   CMP/GE      R1,R14
    00000388 8BD1                   BF          L553
    0000038A              L557:                             
      string.cpp   177            }
      string.cpp   178        }
      string.cpp   179    
      string.cpp   180    }
    0000038A 7F6C                   ADD         #108,R15
    0000038C 4F26                   LDS.L       @R15+,PR
    0000038E 68F6                   MOV.L       @R15+,R8
    00000390 69F6                   MOV.L       @R15+,R9
    00000392 6AF6                   MOV.L       @R15+,R10
    00000394 6BF6                   MOV.L       @R15+,R11
    00000396 6CF6                   MOV.L       @R15+,R12
    00000398 6DF6                   MOV.L       @R15+,R13
    0000039A 000B                   RTS
    0000039C 6EF6                   MOV.L       @R15+,R14
    0000039E              _mesurer__6StringFPc:            ; function: String::mesurer(char *)
                                                           ; frame size=0
    0000039E E400                   MOV         #0,R4
    000003A0              L559:                             
    000003A0 6043                   MOV         R4,R0
    000003A2 035C                   MOV.B       @(R0,R5),R3
    000003A4 2338                   TST         R3,R3
    000003A6 8B01                   BF          L560
    000003A8 000B                   RTS
    000003AA 6043                   MOV         R4,R0
    000003AC              L560:                             
    000003AC AFF8                   BRA         L559
    000003AE 7401                   ADD         #1,R4
    000003B0              L561:                             
    000003B0 000B                   RTS
    000003B2 0009                   NOP
      string.cpp   181    
      string.cpp   182    void String::afficherScrolling(int x,int y,int maxX,int moment)
      string.cpp   183    {
      string.cpp   184    moment = moment%((size*(Options::getLargeurFont()+1))+30);
      string.cpp   185    
      string.cpp   186    moment-=6;
      string.cpp   187    if(moment<0)moment = 0;
      string.cpp   188    int decalage = moment%(Options::getLargeurFont()+1);
      string.cpp   189    moment/=(Options::getLargeurFont()+1);
      string.cpp   190    
      string.cpp   191    if(!Options::getDouxScrolling())decalage =0;
      string.cpp   192    char temp[50]={0};
      string.cpp   193    int taille = (maxX+Options::getLargeurFont()-x)/(Options::getLargeurFont()+1);
      string.cpp   194    maxX = x+taille*(Options::getLargeurFont()+1);
      string.cpp   195    bool tropGrand=0;
      string.cpp   196    if((size-moment)>=taille)tropGrand=1;
      string.cpp   197    
      string.cpp   198    
      string.cpp   199    if(size<taille)
      string.cpp   200        {
      string.cpp   201        decalage = 0;
      string.cpp   202        memcpyT(temp,stockage,taille);
      string.cpp   203        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   204    else if(tropGrand)
      string.cpp   205        {
      string.cpp   206        if(decalage)taille++;
      string.cpp   207        memcpyT(temp,&stockage[moment],taille);
      string.cpp   208        if(!moment && !decalage)for(int i = 1;i<3;i++)temp[taille-i]='.';
      string.cpp   209        }
      string.cpp   210    else
      string.cpp   211        {
      string.cpp   212        memcpyT(temp,&stockage[size-taille+1],taille);
      string.cpp   213        decalage=0;
      string.cpp   214        }
      string.cpp   215    Txt_Text(temp,x-decalage,y,Options::getFont(),TXT_OR);
      string.cpp   216    ML_rectangle(x-Options::getLargeurFont(),y-1,x-1,y+Options::getHauteurFont(),0,ML_WHITE,ML_WHITE);
      string.cpp   217    ML_rectangle(maxX,y-1,maxX+Options::getLargeurFont(),y+Options::getHauteurFont(),0,ML_WHITE,ML_WHITE);
      string.cpp   218    }
      string.cpp   219    
      string.cpp   220    
      string.cpp   221    
      string.cpp   222    int String::afficherDialogue(int moment)
      string.cpp   223    {
      string.cpp   224    
      string.cpp   225    char vide[50]={0};
      string.cpp   226    char temp[50]={0};
      string.cpp   227    int start = 0;
      string.cpp   228    int i=1;
      string.cpp   229    int largeurFont = Options::getLargeurFont()+1;
      string.cpp   230    int hauteurFont = Options::getHauteurFont()+1;
      string.cpp   231    int Xactuel = 5;
      string.cpp   232    int y = 39;
      string.cpp   233    
      string.cpp   234    while(stockage[start] && start<=moment)
      string.cpp   235        {
      string.cpp   236        if(stockage[start] == '\n')
      string.cpp   237            {
      string.cpp   238            start++;
      string.cpp   239            Xactuel=5;
      string.cpp   240            y+=hauteurFont;
      string.cpp   241    
      string.cpp   242            }
      string.cpp   243        for(i = 1;stockage[start+i] != ' ' && stockage[start+i] != '\n';i++)if(!stockage[start+i])break;
      string.cpp   244        
      string.cpp   245        if(Xactuel+i*(largeurFont) >=124)
      string.cpp   246            {
      string.cpp   247            Xactuel=5;
      string.cpp   248            y+=hauteurFont;
      string.cpp   249            if(y>60-hauteurFont)
      string.cpp   250                {
      string.cpp   251                if(moment-Options::getVitesse()-1<start && moment>=start)return 0;
      string.cpp   252                y = 39;
      string.cpp   253                ML_rectangle(5,39,123,59,0,ML_WHITE,ML_WHITE);
      string.cpp   254                }
      string.cpp   255            start++;
      string.cpp   256            i--;
      string.cpp   257            }
      string.cpp   258    
      string.cpp   259        memcpyT(temp,vide,50);
      string.cpp   260        memcpyT (temp,(char*)&stockage[start],min(i,moment-start));




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   261        Txt_Text(temp,Xactuel,y,Options::getFont(),TXT_ON);
      string.cpp   262        Xactuel+=i*(largeurFont);
      string.cpp   263            start+=i;
      string.cpp   264        }
      string.cpp   265    if(stockage[moment])return 1;
      string.cpp   266    return 2;
      string.cpp   267    }
      string.cpp   268    
      string.cpp   269    
      string.cpp   270    void String::afficherWordWrap(int x,int y,int maxX)
    000003B4              _afficherWordWrap__6StringFiN21: ; function: String::afficherWordWrap(int, int, int)
                                                           ; frame size=160
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    000003B4 2FE6                   MOV.L       R14,@-R15
    000003B6 2FD6                   MOV.L       R13,@-R15
    000003B8 2FC6                   MOV.L       R12,@-R15
    000003BA 6C43                   MOV         R4,R12
      string.cpp   271    {
      string.cpp   272    char vide[50]={0};
    000003BC D257                   MOV.L       L630+28,R2 ; L370
    000003BE 2FB6                   MOV.L       R11,@-R15
    000003C0 2FA6                   MOV.L       R10,@-R15
    000003C2 2F96                   MOV.L       R9,@-R15
    000003C4 2F86                   MOV.L       R8,@-R15
    000003C6 4F22                   STS.L       PR,@-R15
    000003C8 4F12                   STS.L       MACL,@-R15
    000003CA 7F88                   ADD         #-120,R15
    000003CC D350                   MOV.L       L630+16,R3 ; __slow_mvn
    000003CE 61F3                   MOV         R15,R1
    000003D0 2F52                   MOV.L       R5,@R15
    000003D2 7144                   ADD         #68,R1
    000003D4 1F61                   MOV.L       R6,@(4,R15)
    000003D6 1F72                   MOV.L       R7,@(8,R15)
    000003D8 430B                   JSR         @R3
    000003DA E032                   MOV         #50,R0
      string.cpp   273    char temp[50]={0};
    000003DC D250                   MOV.L       L630+32,R2 ; L372
    000003DE 61F3                   MOV         R15,R1
    000003E0 D34B                   MOV.L       L630+16,R3 ; __slow_mvn
    000003E2 7110                   ADD         #16,R1
    000003E4 430B                   JSR         @R3
    000003E6 E032                   MOV         #50,R0
      string.cpp   274    int start = 0;
      string.cpp   275    int i=1;
      string.cpp   276    int largeurFont = Options::getLargeurFont()+1;
    000003E8 D14E                   MOV.L       L630+36,R1 ; _getLargeurFont__7OptionsSFv
    000003EA 410B                   JSR         @R1
    000003EC ED00                   MOV         #0,R13
    000003EE 680C                   EXTU.B      R0,R8
      string.cpp   277    int hauteurFont = Options::getHauteurFont()+1;
    000003F0 D349                   MOV.L       L630+24,R3 ; _getHauteurFont__7OptionsSFv
    000003F2 430B                   JSR         @R3
    000003F4 7801                   ADD         #1,R8
    000003F6 600C                   EXTU.B      R0,R0
    000003F8 7001                   ADD         #1,R0
    000003FA 1F03                   MOV.L       R0,@(12,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   278    int Xactuel = x;
      string.cpp   279    while(stockage[start])
    000003FC A03F                   BRA         L562
    000003FE 6BF2                   MOV.L       @R15,R11
    00000400              L563:                             
      string.cpp   280        {
      string.cpp   281        for(i = 1;stockage[start+i] != ' ' && stockage[start+i] != '\n';i++)if(!stockage[start+i])break;
    00000400 EA01                   MOV         #1,R10
    00000402 A007                   BRA         L564
    00000404 6EA3                   MOV         R10,R14
    00000406              L565:                             
    00000406 63D3                   MOV         R13,R3
    00000408 50C2                   MOV.L       @(8,R12),R0
    0000040A 33EC                   ADD         R14,R3
    0000040C 023C                   MOV.B       @(R0,R3),R2
    0000040E 2228                   TST         R2,R2
    00000410 890A                   BT          __$__T25551176$381
    00000412 7E01                   ADD         #1,R14
    00000414              L564:                             
    00000414 50C2                   MOV.L       @(8,R12),R0
    00000416 64D3                   MOV         R13,R4
    00000418 34EC                   ADD         R14,R4
    0000041A 044C                   MOV.B       @(R0,R4),R4
    0000041C 6043                   MOV         R4,R0
    0000041E 8820                   CMP/EQ      #32,R0
    00000420 8902                   BT          __$__T25551176$381
    00000422 6043                   MOV         R4,R0
    00000424 880A                   CMP/EQ      #10,R0
    00000426 8BEE                   BF          L565
    00000428              __$__T25551176$381:              ; label: __T25551176
      string.cpp   282        if(Xactuel+i*(largeurFont) >=maxX || stockage[start] == '\n')
    00000428 0E87                   MUL.L       R8,R14
    0000042A 031A                   STS         MACL,R3
    0000042C 52F2                   MOV.L       @(8,R15),R2
    0000042E 33BC                   ADD         R11,R3
    00000430 3323                   CMP/GE      R2,R3
    00000432 8903                   BT          L569
    00000434 50C2                   MOV.L       @(8,R12),R0
    00000436 00DC                   MOV.B       @(R0,R13),R0
    00000438 880A                   CMP/EQ      #10,R0
    0000043A 8B06                   BF          L568
    0000043C              L569:                             
      string.cpp   283            {
      string.cpp   284            Xactuel=x;
    0000043C 6BF2                   MOV.L       @R15,R11
      string.cpp   285            y+=hauteurFont;
      string.cpp   286            start++;
    0000043E 7D01                   ADD         #1,R13
    00000440 53F3                   MOV.L       @(12,R15),R3
      string.cpp   287            i--;
    00000442 7EFF                   ADD         #-1,R14
    00000444 52F1                   MOV.L       @(4,R15),R2
    00000446 323C                   ADD         R3,R2
    00000448 1F21                   MOV.L       R2,@(4,R15)
    0000044A              L568:                             
      string.cpp   288            }
      string.cpp   289    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   290        memcpyT(temp,vide,50);
    0000044A E632                   MOV         #50,R6
    0000044C 65F3                   MOV         R15,R5
    0000044E 7544                   ADD         #68,R5
    00000450 69F3                   MOV         R15,R9
    00000452 7910                   ADD         #16,R9
    00000454 BE05                   BSR         _memcpyT__FPcT1i
    00000456 6493                   MOV         R9,R4
      string.cpp   291        memcpyT (temp,(char*)&stockage[start],i);
    00000458 55C2                   MOV.L       @(8,R12),R5
    0000045A 66E3                   MOV         R14,R6
    0000045C 35DC                   ADD         R13,R5
    0000045E BE00                   BSR         _memcpyT__FPcT1i
    00000460 6493                   MOV         R9,R4
      string.cpp   292        Txt_Text(temp,Xactuel,y,Options::getFont(),TXT_OR);
    00000462 D327                   MOV.L       L630,R3    ; _getFont__7OptionsSFv
    00000464 430B                   JSR         @R3
    00000466 2FA6                   MOV.L       R10,@-R15
    00000468 56F2                   MOV.L       @(8,R15),R6
    0000046A 65B3                   MOV         R11,R5
    0000046C D326                   MOV.L       L630+8,R3  ; _Txt_Text
    0000046E 6703                   MOV         R0,R7
    00000470 430B                   JSR         @R3
    00000472 6493                   MOV         R9,R4
      string.cpp   293        Xactuel+=i*(largeurFont);
    00000474 0E87                   MUL.L       R8,R14
      string.cpp   294            start+=i;
    00000476 3DEC                   ADD         R14,R13
    00000478 7F04                   ADD         #4,R15
    0000047A 021A                   STS         MACL,R2
    0000047C 3B2C                   ADD         R2,R11
    0000047E              L562:                             
    0000047E 50C2                   MOV.L       @(8,R12),R0
    00000480 03DC                   MOV.B       @(R0,R13),R3
    00000482 2338                   TST         R3,R3
    00000484 8BBC                   BF          L563
      string.cpp   295        }
      string.cpp   296    }
    00000486 7F78                   ADD         #120,R15
    00000488 4F16                   LDS.L       @R15+,MACL
    0000048A 4F26                   LDS.L       @R15+,PR
    0000048C 68F6                   MOV.L       @R15+,R8
    0000048E 69F6                   MOV.L       @R15+,R9
    00000490 6AF6                   MOV.L       @R15+,R10
    00000492 6BF6                   MOV.L       @R15+,R11
    00000494 6CF6                   MOV.L       @R15+,R12
    00000496 6DF6                   MOV.L       @R15+,R13
    00000498 000B                   RTS
    0000049A 6EF6                   MOV.L       @R15+,R14
    0000049C              _afficherDialogue__6StringFi:    ; function: String::afficherDialogue(int)
                                                           ; frame size=164
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    0000049C 2FE6                   MOV.L       R14,@-R15
    0000049E 2FD6                   MOV.L       R13,@-R15
    000004A0 2FC6                   MOV.L       R12,@-R15
    000004A2 6C43                   MOV         R4,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004A4 D220                   MOV.L       L630+40,R2 ; L387
    000004A6 2FB6                   MOV.L       R11,@-R15
    000004A8 2FA6                   MOV.L       R10,@-R15
    000004AA 2F96                   MOV.L       R9,@-R15
    000004AC 2F86                   MOV.L       R8,@-R15
    000004AE 6853                   MOV         R5,R8
    000004B0 D317                   MOV.L       L630+16,R3 ; __slow_mvn
    000004B2 4F22                   STS.L       PR,@-R15
    000004B4 4F12                   STS.L       MACL,@-R15
    000004B6 7F8C                   ADD         #-116,R15
    000004B8 61F3                   MOV         R15,R1
    000004BA 7140                   ADD         #64,R1
    000004BC 430B                   JSR         @R3
    000004BE E032                   MOV         #50,R0
    000004C0 D21A                   MOV.L       L630+44,R2 ; L389
    000004C2 61F3                   MOV         R15,R1
    000004C4 D312                   MOV.L       L630+16,R3 ; __slow_mvn
    000004C6 710C                   ADD         #12,R1
    000004C8 430B                   JSR         @R3
    000004CA E032                   MOV         #50,R0
    000004CC D115                   MOV.L       L630+36,R1 ; _getLargeurFont__7OptionsSFv
    000004CE EB00                   MOV         #0,R11
    000004D0 6EB3                   MOV         R11,R14
    000004D2 E905                   MOV         #5,R9
    000004D4 410B                   JSR         @R1
    000004D6 EA27                   MOV         #39,R10
    000004D8 D30F                   MOV.L       L630+24,R3 ; _getHauteurFont__7OptionsSFv
    000004DA 600C                   EXTU.B      R0,R0
    000004DC 7001                   ADD         #1,R0
    000004DE 430B                   JSR         @R3
    000004E0 1F02                   MOV.L       R0,@(8,R15)
    000004E2 600C                   EXTU.B      R0,R0
    000004E4 7001                   ADD         #1,R0
    000004E6 A07D                   BRA         L571
    000004E8 2F02                   MOV.L       R0,@R15
    000004EA              L572:                             
    000004EA 50C2                   MOV.L       @(8,R12),R0
    000004EC 00EC                   MOV.B       @(R0,R14),R0
    000004EE 880A                   CMP/EQ      #10,R0
    000004F0 8F04                   BF/S        L573
    000004F2 E401                   MOV         #1,R4
    000004F4 62F2                   MOV.L       @R15,R2
    000004F6 7E01                   ADD         #1,R14
    000004F8 E905                   MOV         #5,R9
    000004FA 3A2C                   ADD         R2,R10
    000004FC              L573:                             
    000004FC A01F                   BRA         L574
    000004FE 6D43                   MOV         R4,R13
    00000500              L630:                             
    00000500 <00000000>             .DATA.L     _getFont__7OptionsSFv
    00000504 <00000000>             .DATA.L     _getStr__6StringFv
    00000508 <00000000>             .DATA.L     _Txt_Text
    0000050C <00000000>             .DATA.L     L347
    00000510 <00000000>             .DATA.L     __slow_mvn
    00000514 <00000000>             .DATA.L     L349
    00000518 <00000000>             .DATA.L     _getHauteurFont__7OptionsSFv
    0000051C <00000000>             .DATA.L     L370




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000520 <00000000>             .DATA.L     L372
    00000524 <00000000>             .DATA.L     _getLargeurFont__7OptionsSFv
    00000528 <00000000>             .DATA.L     L387
    0000052C <00000000>             .DATA.L     L389
    00000530              L575:                             
    00000530 50C2                   MOV.L       @(8,R12),R0
    00000532 62E3                   MOV         R14,R2
    00000534 32DC                   ADD         R13,R2
    00000536 032C                   MOV.B       @(R0,R2),R3
    00000538 2338                   TST         R3,R3
    0000053A 890A                   BT          __$__T25541788$400
    0000053C 7D01                   ADD         #1,R13
    0000053E              L574:                             
    0000053E 64E3                   MOV         R14,R4
    00000540 50C2                   MOV.L       @(8,R12),R0
    00000542 34DC                   ADD         R13,R4
    00000544 044C                   MOV.B       @(R0,R4),R4
    00000546 6043                   MOV         R4,R0
    00000548 8820                   CMP/EQ      #32,R0
    0000054A 8902                   BT          __$__T25541788$400
    0000054C 6043                   MOV         R4,R0
    0000054E 880A                   CMP/EQ      #10,R0
    00000550 8BEE                   BF          L575
    00000552              __$__T25541788$400:              ; label: __T25541788
    00000552 E47C                   MOV         #124,R4
    00000554 53F2                   MOV.L       @(8,R15),R3
    00000556 0D37                   MUL.L       R3,R13
    00000558 031A                   STS         MACL,R3
    0000055A 339C                   ADD         R9,R3
    0000055C 3343                   CMP/GE      R4,R3
    0000055E 8B20                   BF          L578
    00000560 62F2                   MOV.L       @R15,R2
    00000562 E43C                   MOV         #60,R4
    00000564 3A2C                   ADD         R2,R10
    00000566 6343                   MOV         R4,R3
    00000568 3328                   SUB         R2,R3
    0000056A 3A37                   CMP/GT      R3,R10
    0000056C 8F17                   BF/S        L579
    0000056E E905                   MOV         #5,R9
    00000570 DA90                   MOV.L       L631,R10   ; _getVitesse__7OptionsSFv
    00000572 4A0B                   JSR         @R10
    00000574 0009                   NOP
    00000576 6383                   MOV         R8,R3
    00000578 3308                   SUB         R0,R3
    0000057A 73FF                   ADD         #-1,R3
    0000057C 33E3                   CMP/GE      R14,R3
    0000057E 8903                   BT          L580
    00000580 38E3                   CMP/GE      R14,R8
    00000582 8B01                   BF          L580
    00000584 A03D                   BRA         L581
    00000586 E000                   MOV         #0,R0
    00000588              L580:                             
    00000588 2FB6                   MOV.L       R11,@-R15
    0000058A E73B                   MOV         #59,R7
    0000058C D28A                   MOV.L       L631+4,R2  ; _ML_rectangle
    0000058E EA27                   MOV         #39,R10
    00000590 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000592 E67B                   MOV         #123,R6
    00000594 2FB6                   MOV.L       R11,@-R15
    00000596 65A3                   MOV         R10,R5
    00000598 420B                   JSR         @R2
    0000059A E405                   MOV         #5,R4
    0000059C 7F0C                   ADD         #12,R15
    0000059E              L579:                             
    0000059E 7E01                   ADD         #1,R14
    000005A0 7DFF                   ADD         #-1,R13
    000005A2              L578:                             
    000005A2 E632                   MOV         #50,R6
    000005A4 65F3                   MOV         R15,R5
    000005A6 7540                   ADD         #64,R5
    000005A8 64F3                   MOV         R15,R4
    000005AA 740C                   ADD         #12,R4
    000005AC BD59                   BSR         _memcpyT__FPcT1i
    000005AE 1F41                   MOV.L       R4,@(4,R15)
    000005B0 D282                   MOV.L       L631+8,R2  ; _min
    000005B2 6583                   MOV         R8,R5
    000005B4 35E8                   SUB         R14,R5
    000005B6 420B                   JSR         @R2
    000005B8 64D3                   MOV         R13,R4
    000005BA 6603                   MOV         R0,R6
    000005BC 55C2                   MOV.L       @(8,R12),R5
    000005BE 35EC                   ADD         R14,R5
    000005C0 BD4F                   BSR         _memcpyT__FPcT1i
    000005C2 54F1                   MOV.L       @(4,R15),R4
    000005C4 D37E                   MOV.L       L631+12,R3 ; _getFont__7OptionsSFv
    000005C6 E202                   MOV         #2,R2
    000005C8 430B                   JSR         @R3
    000005CA 2F26                   MOV.L       R2,@-R15
    000005CC D37D                   MOV.L       L631+16,R3 ; _Txt_Text
    000005CE 6703                   MOV         R0,R7
    000005D0 66A3                   MOV         R10,R6
    000005D2 6593                   MOV         R9,R5
    000005D4 430B                   JSR         @R3
    000005D6 54F2                   MOV.L       @(8,R15),R4
    000005D8 7F04                   ADD         #4,R15
    000005DA 3EDC                   ADD         R13,R14
    000005DC 52F2                   MOV.L       @(8,R15),R2
    000005DE 0D27                   MUL.L       R2,R13
    000005E0 021A                   STS         MACL,R2
    000005E2 392C                   ADD         R2,R9
    000005E4              L571:                             
    000005E4 50C2                   MOV.L       @(8,R12),R0
    000005E6 03EC                   MOV.B       @(R0,R14),R3
    000005E8 2338                   TST         R3,R3
    000005EA 8903                   BT          L582
    000005EC 3E87                   CMP/GT      R8,R14
    000005EE 8901                   BT          L632
    000005F0 AF7B                   BRA         L572
    000005F2 0009                   NOP
    000005F4              L632:                             
    000005F4              L582:                             
    000005F4 50C2                   MOV.L       @(8,R12),R0
    000005F6 028C                   MOV.B       @(R0,R8),R2
    000005F8 2228                   TST         R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005FA 8901                   BT          L583
    000005FC A001                   BRA         L581
    000005FE E001                   MOV         #1,R0
    00000600              L583:                             
    00000600 E002                   MOV         #2,R0
    00000602              L581:                             
    00000602 7F74                   ADD         #116,R15
    00000604 4F16                   LDS.L       @R15+,MACL
    00000606 4F26                   LDS.L       @R15+,PR
    00000608 68F6                   MOV.L       @R15+,R8
    0000060A 69F6                   MOV.L       @R15+,R9
    0000060C 6AF6                   MOV.L       @R15+,R10
    0000060E 6BF6                   MOV.L       @R15+,R11
    00000610 6CF6                   MOV.L       @R15+,R12
    00000612 6DF6                   MOV.L       @R15+,R13
    00000614 000B                   RTS
    00000616 6EF6                   MOV.L       @R15+,R14
    00000618              _afficherScrolling__6StringFiN31:
                                                           ; function: String::afficherScrolling(int, int, int, int)
                                                           ; frame size=132
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    00000618 2FE6                   MOV.L       R14,@-R15
    0000061A E064                   MOV         #100,R0
    0000061C 2FD6                   MOV.L       R13,@-R15
    0000061E 2FC6                   MOV.L       R12,@-R15
    00000620 2FB6                   MOV.L       R11,@-R15
    00000622 2FA6                   MOV.L       R10,@-R15
    00000624 2F96                   MOV.L       R9,@-R15
    00000626 6943                   MOV         R4,R9
    00000628 DB67                   MOV.L       L631+20,R11; _getLargeurFont__7OptionsSFv
    0000062A 2F86                   MOV.L       R8,@-R15
    0000062C 4F22                   STS.L       PR,@-R15
    0000062E 6853                   MOV         R5,R8
    00000630 4F12                   STS.L       MACL,@-R15
    00000632 7FC0                   ADD         #-64,R15
    00000634 2F62                   MOV.L       R6,@R15
    00000636 1F71                   MOV.L       R7,@(4,R15)
    00000638 4B0B                   JSR         @R11
    0000063A 0DFE                   MOV.L       @(R0,R15),R13
    0000063C 6392                   MOV.L       @R9,R3
    0000063E 600C                   EXTU.B      R0,R0
    00000640 D262                   MOV.L       L631+24,R2 ; __modls
    00000642 7001                   ADD         #1,R0
    00000644 0307                   MUL.L       R0,R3
    00000646 001A                   STS         MACL,R0
    00000648 701E                   ADD         #30,R0
    0000064A 420B                   JSR         @R2
    0000064C 61D3                   MOV         R13,R1
    0000064E 6D03                   MOV         R0,R13
    00000650 7DFA                   ADD         #-6,R13
    00000652 4D11                   CMP/PZ      R13
    00000654 8D01                   BT/S        L584
    00000656 EE00                   MOV         #0,R14
    00000658 6DE3                   MOV         R14,R13
    0000065A              L584:                             
    0000065A 4B0B                   JSR         @R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000065C 0009                   NOP
    0000065E 600C                   EXTU.B      R0,R0
    00000660 D25A                   MOV.L       L631+24,R2 ; __modls
    00000662 7001                   ADD         #1,R0
    00000664 420B                   JSR         @R2
    00000666 61D3                   MOV         R13,R1
    00000668 4B0B                   JSR         @R11
    0000066A 6A03                   MOV         R0,R10
    0000066C D358                   MOV.L       L631+28,R3 ; __divls
    0000066E 600C                   EXTU.B      R0,R0
    00000670 7001                   ADD         #1,R0
    00000672 430B                   JSR         @R3
    00000674 61D3                   MOV         R13,R1
    00000676 D257                   MOV.L       L631+32,R2 ; _getDouxScrolling__7OptionsSFv
    00000678 420B                   JSR         @R2
    0000067A 6D03                   MOV         R0,R13
    0000067C 2008                   TST         R0,R0
    0000067E 8F01                   BF/S        L585
    00000680 E632                   MOV         #50,R6
    00000682 6AE3                   MOV         R14,R10
    00000684              L585:                             
    00000684 D354                   MOV.L       L631+36,R3 ; _memset
    00000686 E500                   MOV         #0,R5
    00000688 64F3                   MOV         R15,R4
    0000068A 430B                   JSR         @R3
    0000068C 740C                   ADD         #12,R4
    0000068E E632                   MOV         #50,R6
    00000690 D251                   MOV.L       L631+36,R2 ; _memset
    00000692 E500                   MOV         #0,R5
    00000694 64F3                   MOV         R15,R4
    00000696 420B                   JSR         @R2
    00000698 740C                   ADD         #12,R4
    0000069A 60E3                   MOV         R14,R0
    0000069C 4B0B                   JSR         @R11
    0000069E 80FC                   MOV.B       R0,@(12,R15)
    000006A0 53F1                   MOV.L       @(4,R15),R3
    000006A2 610C                   EXTU.B      R0,R1
    000006A4 313C                   ADD         R3,R1
    000006A6 3188                   SUB         R8,R1
    000006A8 4B0B                   JSR         @R11
    000006AA 6C13                   MOV         R1,R12
    000006AC D348                   MOV.L       L631+28,R3 ; __divls
    000006AE 600C                   EXTU.B      R0,R0
    000006B0 7001                   ADD         #1,R0
    000006B2 430B                   JSR         @R3
    000006B4 61C3                   MOV         R12,R1
    000006B6 4B0B                   JSR         @R11
    000006B8 6C03                   MOV         R0,R12
    000006BA 600C                   EXTU.B      R0,R0
    000006BC 7001                   ADD         #1,R0
    000006BE 0C07                   MUL.L       R0,R12
    000006C0 001A                   STS         MACL,R0
    000006C2 308C                   ADD         R8,R0
    000006C4 1F01                   MOV.L       R0,@(4,R15)
    000006C6 6392                   MOV.L       @R9,R3
    000006C8 33D8                   SUB         R13,R3
    000006CA 33C3                   CMP/GE      R12,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006CC 8F01                   BF/S        L586
    000006CE E500                   MOV         #0,R5
    000006D0 E501                   MOV         #1,R5
    000006D2              L586:                             
    000006D2 64F3                   MOV         R15,R4
    000006D4 6392                   MOV.L       @R9,R3
    000006D6 33C3                   CMP/GE      R12,R3
    000006D8 8D06                   BT/S        L587
    000006DA 740C                   ADD         #12,R4
    000006DC 6AE3                   MOV         R14,R10
    000006DE 66C3                   MOV         R12,R6
    000006E0 BCBF                   BSR         _memcpyT__FPcT1i
    000006E2 5592                   MOV.L       @(8,R9),R5
    000006E4 A023                   BRA         L588
    000006E6 0009                   NOP
    000006E8              L587:                             
    000006E8 2558                   TST         R5,R5
    000006EA 8918                   BT          L589
    000006EC 2AA8                   TST         R10,R10
    000006EE 8900                   BT          L590
    000006F0 7C01                   ADD         #1,R12
    000006F2              L590:                             
    000006F2 66C3                   MOV         R12,R6
    000006F4 5592                   MOV.L       @(8,R9),R5
    000006F6 BCB4                   BSR         _memcpyT__FPcT1i
    000006F8 35DC                   ADD         R13,R5
    000006FA 2DD8                   TST         R13,R13
    000006FC 8B17                   BF          L588
    000006FE 2AA8                   TST         R10,R10
    00000700 8B15                   BF          L588
    00000702 E501                   MOV         #1,R5
    00000704 E703                   MOV         #3,R7
    00000706 E62E                   MOV         #46,R6
    00000708 7CFF                   ADD         #-1,R12
    0000070A 64F3                   MOV         R15,R4
    0000070C 740C                   ADD         #12,R4
    0000070E 34CC                   ADD         R12,R4
    00000710              L592:                             
    00000710 2460                   MOV.B       R6,@R4
    00000712 7501                   ADD         #1,R5
    00000714 3573                   CMP/GE      R7,R5
    00000716 8FFB                   BF/S        L592
    00000718 74FF                   ADD         #-1,R4
    0000071A A008                   BRA         L588
    0000071C 0009                   NOP
    0000071E              L589:                             
    0000071E 66C3                   MOV         R12,R6
    00000720 6592                   MOV.L       @R9,R5
    00000722 35C8                   SUB         R12,R5
    00000724 5392                   MOV.L       @(8,R9),R3
    00000726 353C                   ADD         R3,R5
    00000728 BC9B                   BSR         _memcpyT__FPcT1i
    0000072A 7501                   ADD         #1,R5
    0000072C 6AE3                   MOV         R14,R10
    0000072E              L588:                             
    0000072E E301                   MOV         #1,R3
    00000730 D223                   MOV.L       L631+12,R2 ; _getFont__7OptionsSFv




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000732 420B                   JSR         @R2
    00000734 2F36                   MOV.L       R3,@-R15
    00000736 6703                   MOV         R0,R7
    00000738 5DF1                   MOV.L       @(4,R15),R13
    0000073A 6583                   MOV         R8,R5
    0000073C D321                   MOV.L       L631+16,R3 ; _Txt_Text
    0000073E 64F3                   MOV         R15,R4
    00000740 66D3                   MOV         R13,R6
    00000742 35A8                   SUB         R10,R5
    00000744 430B                   JSR         @R3
    00000746 7410                   ADD         #16,R4
    00000748 2FE6                   MOV.L       R14,@-R15
    0000074A 2FE6                   MOV.L       R14,@-R15
    0000074C D223                   MOV.L       L631+40,R2 ; _getHauteurFont__7OptionsSFv
    0000074E 420B                   JSR         @R2
    00000750 2FE6                   MOV.L       R14,@-R15
    00000752 600C                   EXTU.B      R0,R0
    00000754 67D3                   MOV         R13,R7
    00000756 370C                   ADD         R0,R7
    00000758 2F76                   MOV.L       R7,@-R15
    0000075A 6683                   MOV         R8,R6
    0000075C 76FF                   ADD         #-1,R6
    0000075E 63D3                   MOV         R13,R3
    00000760 2F66                   MOV.L       R6,@-R15
    00000762 73FF                   ADD         #-1,R3
    00000764 1F38                   MOV.L       R3,@(32,R15)
    00000766 4B0B                   JSR         @R11
    00000768 2F36                   MOV.L       R3,@-R15
    0000076A 600C                   EXTU.B      R0,R0
    0000076C 65F6                   MOV.L       @R15+,R5
    0000076E 6483                   MOV         R8,R4
    00000770 D311                   MOV.L       L631+4,R3  ; _ML_rectangle
    00000772 3408                   SUB         R0,R4
    00000774 66F6                   MOV.L       @R15+,R6
    00000776 430B                   JSR         @R3
    00000778 67F6                   MOV.L       @R15+,R7
    0000077A 2FE6                   MOV.L       R14,@-R15
    0000077C 2FE6                   MOV.L       R14,@-R15
    0000077E D217                   MOV.L       L631+40,R2 ; _getHauteurFont__7OptionsSFv
    00000780 420B                   JSR         @R2
    00000782 2FE6                   MOV.L       R14,@-R15
    00000784 600C                   EXTU.B      R0,R0
    00000786 67D3                   MOV         R13,R7
    00000788 370C                   ADD         R0,R7
    0000078A 4B0B                   JSR         @R11
    0000078C 2F76                   MOV.L       R7,@-R15
    0000078E 600C                   EXTU.B      R0,R0
    00000790 56F9                   MOV.L       @(36,R15),R6
    00000792 360C                   ADD         R0,R6
    00000794 55FA                   MOV.L       @(40,R15),R5
    00000796 54F9                   MOV.L       @(36,R15),R4
    00000798 D307                   MOV.L       L631+4,R3  ; _ML_rectangle
    0000079A 430B                   JSR         @R3
    0000079C 67F6                   MOV.L       @R15+,R7
    0000079E 7F5C                   ADD         #92,R15
    000007A0 4F16                   LDS.L       @R15+,MACL
    000007A2 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007A4 68F6                   MOV.L       @R15+,R8
    000007A6 69F6                   MOV.L       @R15+,R9
    000007A8 6AF6                   MOV.L       @R15+,R10
    000007AA 6BF6                   MOV.L       @R15+,R11
    000007AC 6CF6                   MOV.L       @R15+,R12
    000007AE 6DF6                   MOV.L       @R15+,R13
    000007B0 000B                   RTS
    000007B2 6EF6                   MOV.L       @R15+,R14
    000007B4              L631:                             
    000007B4 <00000000>             .DATA.L     _getVitesse__7OptionsSFv
    000007B8 <00000000>             .DATA.L     _ML_rectangle
    000007BC <00000000>             .DATA.L     _min
    000007C0 <00000000>             .DATA.L     _getFont__7OptionsSFv
    000007C4 <00000000>             .DATA.L     _Txt_Text
    000007C8 <00000000>             .DATA.L     _getLargeurFont__7OptionsSFv
    000007CC <00000000>             .DATA.L     __modls
    000007D0 <00000000>             .DATA.L     __divls
    000007D4 <00000000>             .DATA.L     _getDouxScrolling__7OptionsSFv
    000007D8 <00000000>             .DATA.L     _memset
    000007DC <00000000>             .DATA.L     _getHauteurFont__7OptionsSFv
      string.cpp   297    
      string.cpp   298    
      string.cpp   299    void String::afficherMenuDeroulant(int x,int y,int Xmax,int Ymax,int curseurY,int moment,int nombreElement
                         +,int titre,int afficherFleche)
    000007E0              _afficherMenuDeroulant__6StringFiN81:
                                                           ; function: String::afficherMenuDeroulant(int, int, int, int, int, int, i
                        +                                  nt, int, int)
                                                           ; frame size=196
                                                           ; used runtime library name:
                                                           ; __divls
    000007E0 2FE6                   MOV.L       R14,@-R15
    000007E2 2FD6                   MOV.L       R13,@-R15
    000007E4 2FC6                   MOV.L       R12,@-R15
      string.cpp   300    {
      string.cpp   301    
      string.cpp   302    int nombreLigne = (Ymax-y)/(Options::getHauteurFont()+1);
      string.cpp   303    int camera = 0;
    000007E6 ED00                   MOV         #0,R13
    000007E8 D337                   MOV.L       L633+14,R3 ; _getHauteurFont__7OptionsSFv
    000007EA 6C63                   MOV         R6,R12
    000007EC 2FB6                   MOV.L       R11,@-R15
    000007EE 6BD3                   MOV         R13,R11
    000007F0 2FA6                   MOV.L       R10,@-R15
    000007F2 2F96                   MOV.L       R9,@-R15
    000007F4 2F86                   MOV.L       R8,@-R15
    000007F6 6943                   MOV         R4,R9
    000007F8 905F                   MOV.W       L633,R0    ; H'FF64
    000007FA 6853                   MOV         R5,R8
    000007FC 4F22                   STS.L       PR,@-R15
    000007FE 4F12                   STS.L       MACL,@-R15
    00000800 3F0C                   ADD         R0,R15
    00000802 1F72                   MOV.L       R7,@(8,R15)
    00000804 905A                   MOV.W       L633+2,R0  ; H'00C0
    00000806 01FE                   MOV.L       @(R0,R15),R1
    00000808 31C8                   SUB         R12,R1
    0000080A 430B                   JSR         @R3
    0000080C 2F16                   MOV.L       R1,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000080E 600C                   EXTU.B      R0,R0
    00000810 D22E                   MOV.L       L633+18,R2 ; __divls
    00000812 7001                   ADD         #1,R0
    00000814 420B                   JSR         @R2
    00000816 61F6                   MOV.L       @R15+,R1
      string.cpp   304    int largeur = Options::getLargeurFont()+1;
    00000818 D32D                   MOV.L       L633+22,R3 ; _getLargeurFont__7OptionsSFv
    0000081A 430B                   JSR         @R3
    0000081C 2F02                   MOV.L       R0,@R15
    0000081E 600C                   EXTU.B      R0,R0
      string.cpp   305    int hauteur = Options::getHauteurFont()+1;
    00000820 D329                   MOV.L       L633+14,R3 ; _getHauteurFont__7OptionsSFv
    00000822 7001                   ADD         #1,R0
    00000824 430B                   JSR         @R3
    00000826 1F03                   MOV.L       R0,@(12,R15)
    00000828 600C                   EXTU.B      R0,R0
    0000082A 7001                   ADD         #1,R0
    0000082C 1F05                   MOV.L       R0,@(20,R15)
    0000082E 63B3                   MOV         R11,R3
    00000830 64F2                   MOV.L       @R15,R4
    00000832 3347                   CMP/GT      R4,R3
    00000834 9043                   MOV.W       L633+4,R0  ; H'00C4
    00000836 343E                   ADDC        R3,R4
    00000838 02FE                   MOV.L       @(R0,R15),R2
    0000083A 4421                   SHAR        R4
    0000083C 3247                   CMP/GT      R4,R2
    0000083E 8B02                   BF          L595
      string.cpp   306    
      string.cpp   307    if(curseurY>nombreLigne/2)camera = curseurY-nombreLigne/2;
    00000840 903D                   MOV.W       L633+4,R0  ; H'00C4
    00000842 0BFE                   MOV.L       @(R0,R15),R11
    00000844 3B48                   SUB         R4,R11
    00000846              L595:                             
      string.cpp   308    if(camera+nombreLigne >nombreElement)camera =nombreElement-nombreLigne;
    00000846 63F2                   MOV.L       @R15,R3
    00000848 903A                   MOV.W       L633+6,R0  ; H'00CC
    0000084A 33BC                   ADD         R11,R3
    0000084C 02FE                   MOV.L       @(R0,R15),R2
    0000084E 3327                   CMP/GT      R2,R3
    00000850 8B03                   BF          L596
    00000852 63F2                   MOV.L       @R15,R3
    00000854 9034                   MOV.W       L633+6,R0  ; H'00CC
    00000856 0BFE                   MOV.L       @(R0,R15),R11
    00000858 3B38                   SUB         R3,R11
    0000085A              L596:                             
      string.cpp   309    String fleche("\001");
    0000085A D51E                   MOV.L       L633+26,R5 ; L450
    0000085C 9431                   MOV.W       L633+8,R4  ; H'0090
    0000085E BC2C                   BSR         ___ct__6StringFPc
    00000860 34FC                   ADD         R15,R4
      string.cpp   310    char vide[50]={0};
    00000862 E632                   MOV         #50,R6
    00000864 DE1C                   MOV.L       L633+30,R14; _memset
    00000866 E500                   MOV         #0,R5
    00000868 64F3                   MOV         R15,R4
    0000086A 4E0B                   JSR         @R14
    0000086C 745C                   ADD         #92,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000086E E632                   MOV         #50,R6
    00000870 E500                   MOV         #0,R5
    00000872 64F3                   MOV         R15,R4
    00000874 4E0B                   JSR         @R14
    00000876 745C                   ADD         #92,R4
    00000878 E05C                   MOV         #92,R0
      string.cpp   311    char temp[50]={0};
    0000087A E632                   MOV         #50,R6
    0000087C 0FD4                   MOV.B       R13,@(R0,R15)
    0000087E E500                   MOV         #0,R5
    00000880 64F3                   MOV         R15,R4
    00000882 4E0B                   JSR         @R14
    00000884 7428                   ADD         #40,R4
    00000886 E632                   MOV         #50,R6
    00000888 E500                   MOV         #0,R5
    0000088A 64F3                   MOV         R15,R4
    0000088C 4E0B                   JSR         @R14
    0000088E 7428                   ADD         #40,R4
    00000890 E028                   MOV         #40,R0
      string.cpp   312    int start = 0;
    00000892 EA00                   MOV         #0,R10
    00000894 0FD4                   MOV.B       R13,@(R0,R15)
      string.cpp   313    int end = 1;
      string.cpp   314    
      string.cpp   315    for(int i=0;i<nombreLigne+camera && i<nombreElement;i++)
    00000896 6EA3                   MOV         R10,R14
    00000898 63F2                   MOV.L       @R15,R3
    0000089A ED01                   MOV         #1,R13
    0000089C 9012                   MOV.W       L633+10,R0 ; H'00D4
    0000089E 33BC                   ADD         R11,R3
    000008A0 1F31                   MOV.L       R3,@(4,R15)
    000008A2 52F3                   MOV.L       @(12,R15),R2
    000008A4 01FE                   MOV.L       @(R0,R15),R1
    000008A6 0127                   MUL.L       R2,R1
    000008A8 900D                   MOV.W       L633+12,R0 ; H'00D0
    000008AA 021A                   STS         MACL,R2
    000008AC 328C                   ADD         R8,R2
    000008AE 1F26                   MOV.L       R2,@(24,R15)
    000008B0 00FE                   MOV.L       @(R0,R15),R0
    000008B2 2008                   TST         R0,R0
    000008B4 0029                   MOVT        R0
    000008B6 A071                   BRA         L598
    000008B8 1F04                   MOV.L       R0,@(16,R15)
    000008BA              L633:                             
    000008BA FF64                   .DATA.W     H'FF64
    000008BC 00C0                   .DATA.W     H'00C0
    000008BE 00C4                   .DATA.W     H'00C4
    000008C0 00CC                   .DATA.W     H'00CC
    000008C2 0090                   .DATA.W     H'0090
    000008C4 00D4                   .DATA.W     H'00D4
    000008C6 00D0                   .DATA.W     H'00D0
    000008C8 <00000000>             .DATA.L     _getHauteurFont__7OptionsSFv
    000008CC <00000000>             .DATA.L     __divls
    000008D0 <00000000>             .DATA.L     _getLargeurFont__7OptionsSFv
    000008D4 <00000000>             .DATA.L     L450
    000008D8 <00000000>             .DATA.L     _memset
    000008DC              L601:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   316        {
      string.cpp   317        while(stockage[end]!='\n' && stockage[end])end++;
    000008DC 7D01                   ADD         #1,R13
    000008DE              L600:                             
    000008DE 5092                   MOV.L       @(8,R9),R0
    000008E0 00DC                   MOV.B       @(R0,R13),R0
    000008E2 880A                   CMP/EQ      #10,R0
    000008E4 8D02                   BT/S        L602
    000008E6 6403                   MOV         R0,R4
    000008E8 2448                   TST         R4,R4
    000008EA 8BF7                   BF          L601
    000008EC              L602:                             
      string.cpp   318        if(i>=camera && i<nombreLigne+camera)
    000008EC 3EB3                   CMP/GE      R11,R14
    000008EE 8B51                   BF          L603
    000008F0 52F1                   MOV.L       @(4,R15),R2
    000008F2 3E23                   CMP/GE      R2,R14
    000008F4 894E                   BT          L603
      string.cpp   319            {
      string.cpp   320            memcpyT(temp,&stockage[start],end-start);
    000008F6 66D3                   MOV         R13,R6
    000008F8 5592                   MOV.L       @(8,R9),R5
    000008FA 64F3                   MOV         R15,R4
    000008FC 36A8                   SUB         R10,R6
    000008FE 35AC                   ADD         R10,R5
    00000900 7428                   ADD         #40,R4
    00000902 BBAE                   BSR         _memcpyT__FPcT1i
    00000904 2F42                   MOV.L       R4,@R15
      string.cpp   321            String affichage(temp);
    00000906 64F3                   MOV         R15,R4
    00000908 65F2                   MOV.L       @R15,R5
    0000090A BBD6                   BSR         ___ct__6StringFPc
    0000090C 741C                   ADD         #28,R4
      string.cpp   322            if(i == curseurY)
    0000090E 905C                   MOV.W       L634,R0    ; H'00C4
    00000910 02FE                   MOV.L       @(R0,R15),R2
    00000912 3E20                   CMP/EQ      R2,R14
    00000914 8B15                   BF          L604
      string.cpp   323                {
      string.cpp   324                affichage.afficherScrolling(x+largeur*afficherFleche,y,Xmax,moment);
    00000916 66C3                   MOV         R12,R6
    00000918 9058                   MOV.W       L634+2,R0  ; H'00C8
    0000091A 01FE                   MOV.L       @(R0,R15),R1
    0000091C 2F16                   MOV.L       R1,@-R15
    0000091E 64F3                   MOV         R15,R4
    00000920 57F3                   MOV.L       @(12,R15),R7
    00000922 55F7                   MOV.L       @(28,R15),R5
    00000924 BE78                   BSR         _afficherScrolling__6StringFiN31
    00000926 7420                   ADD         #32,R4
      string.cpp   325                if(afficherFleche)fleche.afficher(x,y);
    00000928 9051                   MOV.W       L634+4,R0  ; H'00D4
    0000092A 7F04                   ADD         #4,R15
    0000092C 02FE                   MOV.L       @(R0,R15),R2
    0000092E 2228                   TST         R2,R2
    00000930 892A                   BT          L606
    00000932 E700                   MOV         #0,R7
    00000934 944C                   MOV.W       L634+6,R4  ; H'0090




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000936 66C3                   MOV         R12,R6
    00000938 6583                   MOV         R8,R5
    0000093A BCBA                   BSR         _afficher__6StringFiN21
    0000093C 34FC                   ADD         R15,R4
    0000093E A023                   BRA         L606
    00000940 0009                   NOP
    00000942              L604:                             
      string.cpp   326                }
      string.cpp   327            else affichage.afficherScrolling(x+largeur*((!titre || i) && afficherFleche),y,Xmax,moment*titre*!
                         +i);
    00000942 2EE8                   TST         R14,R14
    00000944 9142                   MOV.W       L634+2,R1  ; H'00C8
    00000946 0029                   MOVT        R0
    00000948 9243                   MOV.W       L634+8,R2  ; H'00D0
    0000094A 31FC                   ADD         R15,R1
    0000094C 6312                   MOV.L       @R1,R3
    0000094E 32FC                   ADD         R15,R2
    00000950 0037                   MUL.L       R3,R0
    00000952 001A                   STS         MACL,R0
    00000954 6222                   MOV.L       @R2,R2
    00000956 0027                   MUL.L       R2,R0
    00000958 001A                   STS         MACL,R0
    0000095A 2F06                   MOV.L       R0,@-R15
    0000095C 57F3                   MOV.L       @(12,R15),R7
    0000095E 51F5                   MOV.L       @(20,R15),R1
    00000960 2118                   TST         R1,R1
    00000962 8F02                   BF/S        L609
    00000964 66C3                   MOV         R12,R6
    00000966 2EE8                   TST         R14,R14
    00000968 8905                   BT          L608
    0000096A              L609:                             
    0000096A 9033                   MOV.W       L634+10,R0 ; H'00D8
    0000096C 03FE                   MOV.L       @(R0,R15),R3
    0000096E 2338                   TST         R3,R3
    00000970 8901                   BT          L608
    00000972 A001                   BRA         L610
    00000974 E501                   MOV         #1,R5
    00000976              L608:                             
    00000976 E500                   MOV         #0,R5
    00000978              L610:                             
    00000978 52F4                   MOV.L       @(16,R15),R2
    0000097A 64F3                   MOV         R15,R4
    0000097C 0527                   MUL.L       R2,R5
    0000097E 051A                   STS         MACL,R5
    00000980 358C                   ADD         R8,R5
    00000982 BE49                   BSR         _afficherScrolling__6StringFiN31
    00000984 7420                   ADD         #32,R4
    00000986 7F04                   ADD         #4,R15
    00000988              L606:                             
      string.cpp   328            y+=hauteur;
    00000988 52F5                   MOV.L       @(20,R15),R2
    0000098A E502                   MOV         #2,R5
    0000098C 3C2C                   ADD         R2,R12
    0000098E 64F3                   MOV         R15,R4
    00000990 BBDD                   BSR         ___dt__6StringFv
    00000992 741C                   ADD         #28,R4
    00000994              L603:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   329            }
      string.cpp   330        start = end+1;
    00000994 6AD3                   MOV         R13,R10
    00000996 7A01                   ADD         #1,R10
      string.cpp   331        end++;
    00000998 7D01                   ADD         #1,R13
    0000099A 7E01                   ADD         #1,R14
    0000099C              L598:                             
    0000099C 52F1                   MOV.L       @(4,R15),R2
    0000099E 3E23                   CMP/GE      R2,R14
    000009A0 8903                   BT          L611
    000009A2 9018                   MOV.W       L634+12,R0 ; H'00CC
    000009A4 01FE                   MOV.L       @(R0,R15),R1
    000009A6 3E13                   CMP/GE      R1,R14
    000009A8 8B99                   BF          L600
    000009AA              L611:                             
      string.cpp   332        }
    000009AA E502                   MOV         #2,R5
    000009AC 9410                   MOV.W       L634+6,R4  ; H'0090
    000009AE BBCE                   BSR         ___dt__6StringFv
    000009B0 34FC                   ADD         R15,R4
      string.cpp   333    }
    000009B2 9111                   MOV.W       L634+14,R1 ; H'009C
    000009B4 3F1C                   ADD         R1,R15
    000009B6 4F16                   LDS.L       @R15+,MACL
    000009B8 4F26                   LDS.L       @R15+,PR
    000009BA 68F6                   MOV.L       @R15+,R8
    000009BC 69F6                   MOV.L       @R15+,R9
    000009BE 6AF6                   MOV.L       @R15+,R10
    000009C0 6BF6                   MOV.L       @R15+,R11
    000009C2 6CF6                   MOV.L       @R15+,R12
    000009C4 6DF6                   MOV.L       @R15+,R13
    000009C6 000B                   RTS
    000009C8 6EF6                   MOV.L       @R15+,R14
    000009CA              L634:                             
    000009CA 00C4                   .DATA.W     H'00C4
    000009CC 00C8                   .DATA.W     H'00C8
    000009CE 00D4                   .DATA.W     H'00D4
    000009D0 0090                   .DATA.W     H'0090
    000009D2 00D0                   .DATA.W     H'00D0
    000009D4 00D8                   .DATA.W     H'00D8
    000009D6 00CC                   .DATA.W     H'00CC
    000009D8 009C                   .DATA.W     H'009C
      string.cpp   334    
      string.cpp   335    int  String::afficherTexteDefilant(int x,int y,int Xmax,int Ymax,int moment)
      string.cpp   336    {
      string.cpp   337    moment-=30;
      string.cpp   338    if(moment<0)moment = 0;
      string.cpp   339    char vide[50]={0};
      string.cpp   340    char temp[50]={0};
      string.cpp   341    int start = 0;
      string.cpp   342    int i=1;
      string.cpp   343    int largeurFont = Options::getLargeurFont()+1;
      string.cpp   344    int hauteurFont = Options::getHauteurFont()+1;
      string.cpp   345    int Xactuel = x;
      string.cpp   346    int Yactuel = y-moment+1;
      string.cpp   347    while(stockage[start])




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      string.cpp   348        {
      string.cpp   349        for(i = 1;stockage[start+i] != ' ' && stockage[start+i] != '\n';i++)if(!stockage[start+i])break;
      string.cpp   350    
      string.cpp   351        if(Xactuel+i*(largeurFont) >=Xmax || stockage[start+i] == '\n')
      string.cpp   352            {
      string.cpp   353            Xactuel=x;
      string.cpp   354            Yactuel+=hauteurFont;
      string.cpp   355            start++;
      string.cpp   356            i--;
      string.cpp   357            }
      string.cpp   358    
      string.cpp   359        memcpyT(temp,vide,50);
      string.cpp   360        memcpyT(temp,(char*)&stockage[start + (stockage[start] == '\n')],i);
      string.cpp   361        //if(Yactuel+hauteurFont<Ymax)
      string.cpp   362            if(Yactuel>-6 && Yactuel<70)Txt_text_taille(temp,Xactuel,Yactuel,Options::getFont(),TXT_OR,y-Yactu
                         +el,-Yactuel+Ymax);
      string.cpp   363        //else Txt_Text(temp,Xactuel,Yactuel,Options::getFont(),TXT_OR);
      string.cpp   364        Xactuel+=i*(largeurFont);
      string.cpp   365            start+=i;
      string.cpp   366        }
      string.cpp   367    if(Yactuel+hauteurFont>Ymax)return 1;
      string.cpp   368    if(Yactuel<=Ymax)return 2;
      string.cpp   369    return 0;
      string.cpp   370    }
      string.cpp   371    
      string.cpp   372    
      string.cpp   373    void String::afficherMilieu(int x,int y,int Xmax)
      string.cpp   374    {
      string.cpp   375    
      string.cpp   376    int Ttaille = size*(Options::getLargeurFont()+1);
      string.cpp   377    afficher(((Xmax-x)-Ttaille)/2+x,y);
      string.cpp   378    }
      string.cpp   379    
      string.cpp   380    void String::afficherBoite(int x,int y,int Xmax,int Ymax,int moment,int tailleMax,int nombreElement)
    000009DA              _afficherBoite__6StringFiN61:    ; function: String::afficherBoite(int, int, int, int, int, int, int)
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __divls
      string.cpp   381    {
      string.cpp   382    afficherMenuDeroulant(x,y,Xmax,Ymax,moment/(tailleMax+5)/6,moment,nombreElement,0,0);
    000009DA E300                   MOV         #0,R3
    000009DC 4F22                   STS.L       PR,@-R15
    000009DE 2F36                   MOV.L       R3,@-R15
    000009E0 2F36                   MOV.L       R3,@-R15
    000009E2 52F6                   MOV.L       @(24,R15),R2
    000009E4 2F26                   MOV.L       R2,@-R15
    000009E6 51F5                   MOV.L       @(20,R15),R1
    000009E8 D229                   MOV.L       L635+4,R2  ; __divls
    000009EA 2F16                   MOV.L       R1,@-R15
    000009EC 50F7                   MOV.L       @(28,R15),R0
    000009EE 7005                   ADD         #5,R0
    000009F0 420B                   JSR         @R2
    000009F2 51F6                   MOV.L       @(24,R15),R1
    000009F4 D226                   MOV.L       L635+4,R2  ; __divls
    000009F6 6103                   MOV         R0,R1
    000009F8 420B                   JSR         @R2
    000009FA E006                   MOV         #6,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009FC 2F06                   MOV.L       R0,@-R15
    000009FE 51F6                   MOV.L       @(24,R15),R1
    00000A00 BEEE                   BSR         _afficherMenuDeroulant__6StringFiN81
    00000A02 2F16                   MOV.L       R1,@-R15
      string.cpp   383    }
    00000A04 7F18                   ADD         #24,R15
    00000A06 4F26                   LDS.L       @R15+,PR
    00000A08 000B                   RTS
    00000A0A 0009                   NOP
    00000A0C              _afficherTexteDefilant__6StringFiN41:
                                                           ; function: String::afficherTexteDefilant(int, int, int, int, int)
                                                           ; frame size=176
    00000A0C 2FE6                   MOV.L       R14,@-R15
    00000A0E 2FD6                   MOV.L       R13,@-R15
    00000A10 2FC6                   MOV.L       R12,@-R15
    00000A12 2FB6                   MOV.L       R11,@-R15
    00000A14 2FA6                   MOV.L       R10,@-R15
    00000A16 6B43                   MOV         R4,R11
    00000A18 9038                   MOV.W       L635,R0    ; H'00A8
    00000A1A 2F96                   MOV.L       R9,@-R15
    00000A1C 2F86                   MOV.L       R8,@-R15
    00000A1E 4F22                   STS.L       PR,@-R15
    00000A20 4F12                   STS.L       MACL,@-R15
    00000A22 7F80                   ADD         #-128,R15
    00000A24 2F52                   MOV.L       R5,@R15
    00000A26 1F61                   MOV.L       R6,@(4,R15)
    00000A28 1F73                   MOV.L       R7,@(12,R15)
    00000A2A 09FE                   MOV.L       @(R0,R15),R9
    00000A2C 79E2                   ADD         #-30,R9
    00000A2E 4911                   CMP/PZ      R9
    00000A30 8D01                   BT/S        L614
    00000A32 ED00                   MOV         #0,R13
    00000A34 69D3                   MOV         R13,R9
    00000A36              L614:                             
    00000A36 E632                   MOV         #50,R6
    00000A38 DE16                   MOV.L       L635+8,R14 ; _memset
    00000A3A E500                   MOV         #0,R5
    00000A3C 64F3                   MOV         R15,R4
    00000A3E 4E0B                   JSR         @R14
    00000A40 744C                   ADD         #76,R4
    00000A42 E632                   MOV         #50,R6
    00000A44 E500                   MOV         #0,R5
    00000A46 64F3                   MOV         R15,R4
    00000A48 4E0B                   JSR         @R14
    00000A4A 744C                   ADD         #76,R4
    00000A4C E04C                   MOV         #76,R0
    00000A4E E632                   MOV         #50,R6
    00000A50 0FD4                   MOV.B       R13,@(R0,R15)
    00000A52 E500                   MOV         #0,R5
    00000A54 64F3                   MOV         R15,R4
    00000A56 4E0B                   JSR         @R14
    00000A58 7418                   ADD         #24,R4
    00000A5A E632                   MOV         #50,R6
    00000A5C E500                   MOV         #0,R5
    00000A5E 64F3                   MOV         R15,R4
    00000A60 4E0B                   JSR         @R14
    00000A62 7418                   ADD         #24,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A64 D30C                   MOV.L       L635+12,R3 ; _getLargeurFont__7OptionsSFv
    00000A66 E018                   MOV         #24,R0
    00000A68 0FD4                   MOV.B       R13,@(R0,R15)
    00000A6A 430B                   JSR         @R3
    00000A6C ED00                   MOV         #0,R13
    00000A6E 680C                   EXTU.B      R0,R8
    00000A70 D30A                   MOV.L       L635+16,R3 ; _getHauteurFont__7OptionsSFv
    00000A72 430B                   JSR         @R3
    00000A74 7801                   ADD         #1,R8
    00000A76 600C                   EXTU.B      R0,R0
    00000A78 7001                   ADD         #1,R0
    00000A7A 1F02                   MOV.L       R0,@(8,R15)
    00000A7C 6AF2                   MOV.L       @R15,R10
    00000A7E 5CF1                   MOV.L       @(4,R15),R12
    00000A80 3C98                   SUB         R9,R12
    00000A82 A05D                   BRA         L615
    00000A84 7C01                   ADD         #1,R12
    00000A86              L616:                             
    00000A86 E901                   MOV         #1,R9
    00000A88 A011                   BRA         L617
    00000A8A 6E93                   MOV         R9,R14
    00000A8C              L635:                             
    00000A8C 00A8                   .DATA.W     H'00A8
    00000A8E 0000                   .DATA.W     0
    00000A90 <00000000>             .DATA.L     __divls
    00000A94 <00000000>             .DATA.L     _memset
    00000A98 <00000000>             .DATA.L     _getLargeurFont__7OptionsSFv
    00000A9C <00000000>             .DATA.L     _getHauteurFont__7OptionsSFv
    00000AA0              L618:                             
    00000AA0 50B2                   MOV.L       @(8,R11),R0
    00000AA2 63D3                   MOV         R13,R3
    00000AA4 33EC                   ADD         R14,R3
    00000AA6 023C                   MOV.B       @(R0,R3),R2
    00000AA8 2228                   TST         R2,R2
    00000AAA 890A                   BT          __$__T25572312$490
    00000AAC 7E01                   ADD         #1,R14
    00000AAE              L617:                             
    00000AAE 64D3                   MOV         R13,R4
    00000AB0 50B2                   MOV.L       @(8,R11),R0
    00000AB2 34EC                   ADD         R14,R4
    00000AB4 044C                   MOV.B       @(R0,R4),R4
    00000AB6 6043                   MOV         R4,R0
    00000AB8 8820                   CMP/EQ      #32,R0
    00000ABA 8902                   BT          __$__T25572312$490
    00000ABC 6043                   MOV         R4,R0
    00000ABE 880A                   CMP/EQ      #10,R0
    00000AC0 8BEE                   BF          L618
    00000AC2              __$__T25572312$490:              ; label: __T25572312
    00000AC2 0E87                   MUL.L       R8,R14
    00000AC4 52F3                   MOV.L       @(12,R15),R2
    00000AC6 031A                   STS         MACL,R3
    00000AC8 33AC                   ADD         R10,R3
    00000ACA 3323                   CMP/GE      R2,R3
    00000ACC 8905                   BT          L622
    00000ACE 60D3                   MOV         R13,R0
    00000AD0 53B2                   MOV.L       @(8,R11),R3
    00000AD2 30EC                   ADD         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD4 003C                   MOV.B       @(R0,R3),R0
    00000AD6 880A                   CMP/EQ      #10,R0
    00000AD8 8B04                   BF          L621
    00000ADA              L622:                             
    00000ADA 7D01                   ADD         #1,R13
    00000ADC 6AF2                   MOV.L       @R15,R10
    00000ADE 7EFF                   ADD         #-1,R14
    00000AE0 53F2                   MOV.L       @(8,R15),R3
    00000AE2 3C3C                   ADD         R3,R12
    00000AE4              L621:                             
    00000AE4 E632                   MOV         #50,R6
    00000AE6 65F3                   MOV         R15,R5
    00000AE8 754C                   ADD         #76,R5
    00000AEA 64F3                   MOV         R15,R4
    00000AEC 7418                   ADD         #24,R4
    00000AEE BAB8                   BSR         _memcpyT__FPcT1i
    00000AF0 1F45                   MOV.L       R4,@(20,R15)
    00000AF2 66E3                   MOV         R14,R6
    00000AF4 55B2                   MOV.L       @(8,R11),R5
    00000AF6 1F54                   MOV.L       R5,@(16,R15)
    00000AF8 6053                   MOV         R5,R0
    00000AFA 00DC                   MOV.B       @(R0,R13),R0
    00000AFC 880A                   CMP/EQ      #10,R0
    00000AFE 0129                   MOVT        R1
    00000B00 31DC                   ADD         R13,R1
    00000B02 351C                   ADD         R1,R5
    00000B04 BAAD                   BSR         _memcpyT__FPcT1i
    00000B06 54F5                   MOV.L       @(20,R15),R4
    00000B08 E4FA                   MOV         #-6,R4
    00000B0A 3C47                   CMP/GT      R4,R12
    00000B0C 8B14                   BF          L623
    00000B0E E346                   MOV         #70,R3
    00000B10 3C33                   CMP/GE      R3,R12
    00000B12 8911                   BT          L623
    00000B14 9056                   MOV.W       L636,R0    ; H'00A4
    00000B16 01FE                   MOV.L       @(R0,R15),R1
    00000B18 31C8                   SUB         R12,R1
    00000B1A 2F16                   MOV.L       R1,@-R15
    00000B1C 53F2                   MOV.L       @(8,R15),R3
    00000B1E 33C8                   SUB         R12,R3
    00000B20 2F36                   MOV.L       R3,@-R15
    00000B22 D329                   MOV.L       L636+4,R3  ; _getFont__7OptionsSFv
    00000B24 430B                   JSR         @R3
    00000B26 2F96                   MOV.L       R9,@-R15
    00000B28 D228                   MOV.L       L636+8,R2  ; _Txt_text_taille
    00000B2A 6703                   MOV         R0,R7
    00000B2C 66C3                   MOV         R12,R6
    00000B2E 65A3                   MOV         R10,R5
    00000B30 64F3                   MOV         R15,R4
    00000B32 420B                   JSR         @R2
    00000B34 7424                   ADD         #36,R4
    00000B36 7F0C                   ADD         #12,R15
    00000B38              L623:                             
    00000B38 0E87                   MUL.L       R8,R14
    00000B3A 3DEC                   ADD         R14,R13
    00000B3C 031A                   STS         MACL,R3
    00000B3E 3A3C                   ADD         R3,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B40              L615:                             
    00000B40 50B2                   MOV.L       @(8,R11),R0
    00000B42 02DC                   MOV.B       @(R0,R13),R2
    00000B44 2228                   TST         R2,R2
    00000B46 8B9E                   BF          L616
    00000B48 51F2                   MOV.L       @(8,R15),R1
    00000B4A 31CC                   ADD         R12,R1
    00000B4C 903A                   MOV.W       L636,R0    ; H'00A4
    00000B4E 03FE                   MOV.L       @(R0,R15),R3
    00000B50 3137                   CMP/GT      R3,R1
    00000B52 8B01                   BF          L624
    00000B54 A007                   BRA         L625
    00000B56 E001                   MOV         #1,R0
    00000B58              L624:                             
    00000B58 9034                   MOV.W       L636,R0    ; H'00A4
    00000B5A 03FE                   MOV.L       @(R0,R15),R3
    00000B5C 3C37                   CMP/GT      R3,R12
    00000B5E 8901                   BT          L626
    00000B60 A001                   BRA         L625
    00000B62 E002                   MOV         #2,R0
    00000B64              L626:                             
    00000B64 E000                   MOV         #0,R0
    00000B66              L625:                             
    00000B66 912E                   MOV.W       L636+2,R1  ; H'0080
    00000B68 3F1C                   ADD         R1,R15
    00000B6A 4F16                   LDS.L       @R15+,MACL
    00000B6C 4F26                   LDS.L       @R15+,PR
    00000B6E 68F6                   MOV.L       @R15+,R8
    00000B70 69F6                   MOV.L       @R15+,R9
    00000B72 6AF6                   MOV.L       @R15+,R10
    00000B74 6BF6                   MOV.L       @R15+,R11
    00000B76 6CF6                   MOV.L       @R15+,R12
    00000B78 6DF6                   MOV.L       @R15+,R13
    00000B7A 000B                   RTS
    00000B7C 6EF6                   MOV.L       @R15+,R14
    00000B7E              _afficherMilieu__6StringFiN21:   ; function: String::afficherMilieu(int, int, int)
                                                           ; frame size=32
    00000B7E 2F86                   MOV.L       R8,@-R15
    00000B80 4F22                   STS.L       PR,@-R15
    00000B82 4F12                   STS.L       MACL,@-R15
    00000B84 D212                   MOV.L       L636+12,R2 ; _getLargeurFont__7OptionsSFv
    00000B86 7FEC                   ADD         #-20,R15
    00000B88 1F41                   MOV.L       R4,@(4,R15)
    00000B8A 2F52                   MOV.L       R5,@R15
    00000B8C 1F63                   MOV.L       R6,@(12,R15)
    00000B8E 1F72                   MOV.L       R7,@(8,R15)
    00000B90 53F1                   MOV.L       @(4,R15),R3
    00000B92 420B                   JSR         @R2
    00000B94 6832                   MOV.L       @R3,R8
    00000B96 600C                   EXTU.B      R0,R0
    00000B98 7001                   ADD         #1,R0
    00000B9A E700                   MOV         #0,R7
    00000B9C 0807                   MUL.L       R0,R8
    00000B9E 6173                   MOV         R7,R1
    00000BA0 081A                   STS         MACL,R8
    00000BA2 6283                   MOV         R8,R2
    00000BA4 1F84                   MOV.L       R8,@(16,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BA6 56F3                   MOV.L       @(12,R15),R6
    00000BA8 63F2                   MOV.L       @R15,R3
    00000BAA 55F2                   MOV.L       @(8,R15),R5
    00000BAC 54F1                   MOV.L       @(4,R15),R4
    00000BAE 3538                   SUB         R3,R5
    00000BB0 3528                   SUB         R2,R5
    00000BB2 3157                   CMP/GT      R5,R1
    00000BB4 351E                   ADDC        R1,R5
    00000BB6 4521                   SHAR        R5
    00000BB8 353C                   ADD         R3,R5
    00000BBA 7F14                   ADD         #20,R15
    00000BBC 4F16                   LDS.L       @R15+,MACL
    00000BBE 4F26                   LDS.L       @R15+,PR
    00000BC0 AB77                   BRA         _afficher__6StringFiN21
    00000BC2 68F6                   MOV.L       @R15+,R8
    00000BC4              L636:                             
    00000BC4 00A4                   .DATA.W     H'00A4
    00000BC6 0080                   .DATA.W     H'0080
    00000BC8 <00000000>             .DATA.L     _getFont__7OptionsSFv
    00000BCC <00000000>             .DATA.L     _Txt_text_taille
    00000BD0 <00000000>             .DATA.L     _getLargeurFont__7OptionsSFv
      string.cpp   384    
      string.cpp   385    
      string.cpp   386    
C   00000000              L318:
    00000000 00                     .DATA.B     H'00
    00000001 0000000401             .DATAB.B    4,0
             00           
    00000005              L323:
    00000005 00                     .DATA.B     H'00
    00000006 0000000B01             .DATAB.B    11,0
             00           
    00000011              L347:
    00000011 00                     .DATA.B     H'00
    00000012 0000003101             .DATAB.B    49,0
             00           
    00000043              L349:
    00000043 00                     .DATA.B     H'00
    00000044 0000003101             .DATAB.B    49,0
             00           
    00000075              L370:
    00000075 00                     .DATA.B     H'00
    00000076 0000003101             .DATAB.B    49,0
             00           
    000000A7              L372:
    000000A7 00                     .DATA.B     H'00
    000000A8 0000003101             .DATAB.B    49,0
             00           
    000000D9              L387:
    000000D9 00                     .DATA.B     H'00
    000000DA 0000003101             .DATAB.B    49,0
             00           
    0000010B              L389:
    0000010B 00                     .DATA.B     H'00
    0000010C 0000003101             .DATAB.B    49,0
             00           
    0000013D 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000013E 00000002               .RES.W      1
    00000140              L450:
    00000140 0100                   .DATA.B     H'01,H'00


























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 04-Nov-2020 00:50:49  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         1




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      386



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000BD4 Byte(s)
CONSTANT SECTION (C):                               00000142 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000D16 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           15
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          23
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           134






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\leofa\AppData\Local\Temp\hmk74F2.tmp 

