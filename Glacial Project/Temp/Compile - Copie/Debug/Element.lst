SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Jan-2021 15:45:47  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\leofa\OneDrive\Documents\CASIO\fx-9860G SDK\Tutoriel\Element.cpp

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Element.cp     1    #include "Element.h"
      Element.cp     2    #include "MonochromeLib.h"
      Element.cp     3    #include "ClassParticule.h"
      Element.cp     4    
      Element.cp     5    NewElement::NewElement(const unsigned char* init_Img, int init_x, int init_y, int init_w, int init_h, cons
                         +t char* name, const char* type, Component Compo[], int CompoLength)
P   00000000              ___ct__10NewElementFPCUciN32PCcT6P9ComponentT2:
                                                           ; function: NewElement::NewElement(const unsigned char *, int, int, int, 
                        +                                  int, const char *, const char *, Component *, int)
                                                           ; frame size=20
    00000000 4F22                   STS.L       PR,@-R15
    00000002 7FF0                   ADD         #-16,R15
    00000004 2F42                   MOV.L       R4,@R15
    00000006 1F53                   MOV.L       R5,@(12,R15)
    00000008 1F62                   MOV.L       R6,@(8,R15)
    0000000A 1F71                   MOV.L       R7,@(4,R15)
      Element.cp     6    {
    0000000C 63F2                   MOV.L       @R15,R3
    0000000E 2338                   TST         R3,R3
    00000010 8B05                   BF          L254
    00000012 D322                   MOV.L       L257,R3    ; ___nw__FUl
    00000014 430B                   JSR         @R3
    00000016 E430                   MOV         #48,R4
    00000018 2008                   TST         R0,R0
    0000001A 8D24                   BT/S        L253
    0000001C 2F02                   MOV.L       R0,@R15
    0000001E              L254:                             
      Element.cp     7        Img = (unsigned char*)init_Img;
    0000001E 62F2                   MOV.L       @R15,R2
    00000020 53F3                   MOV.L       @(12,R15),R3
    00000022 2232                   MOV.L       R3,@R2
      Element.cp     8        Name = (char*)name;
    00000024 62F2                   MOV.L       @R15,R2
    00000026 53F7                   MOV.L       @(28,R15),R3
    00000028 1232                   MOV.L       R3,@(8,R2)
      Element.cp     9        Type = (char*)type;
    0000002A 62F2                   MOV.L       @R15,R2
    0000002C 53F8                   MOV.L       @(32,R15),R3
    0000002E 1231                   MOV.L       R3,@(4,R2)
      Element.cp    10        Static = 1;
    00000030 62F2                   MOV.L       @R15,R2
    00000032 E301                   MOV         #1,R3
    00000034 1233                   MOV.L       R3,@(12,R2)
      Element.cp    11        TrfmImgScale = 100;
    00000036 E364                   MOV         #100,R3
    00000038 62F2                   MOV.L       @R15,R2
    0000003A 1234                   MOV.L       R3,@(16,R2)
      Element.cp    12        rotation = 90;
    0000003C 62F2                   MOV.L       @R15,R2
    0000003E E35A                   MOV         #90,R3
    00000040 1235                   MOV.L       R3,@(20,R2)
      Element.cp    13        x = init_x;
    00000042 62F2                   MOV.L       @R15,R2
    00000044 53F2                   MOV.L       @(8,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Jan-2021 15:45:47  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000046 1236                   MOV.L       R3,@(24,R2)
      Element.cp    14        y = init_y;
    00000048 62F2                   MOV.L       @R15,R2
    0000004A 53F1                   MOV.L       @(4,R15),R3
    0000004C 1237                   MOV.L       R3,@(28,R2)
      Element.cp    15        w = init_w;
    0000004E 62F2                   MOV.L       @R15,R2
    00000050 53F5                   MOV.L       @(20,R15),R3
    00000052 1238                   MOV.L       R3,@(32,R2)
      Element.cp    16        h = init_h;
    00000054 62F2                   MOV.L       @R15,R2
    00000056 53F6                   MOV.L       @(24,R15),R3
    00000058 1239                   MOV.L       R3,@(36,R2)
      Element.cp    17        AllCompoLength = CompoLength;
    0000005A 62F2                   MOV.L       @R15,R2
    0000005C 53FA                   MOV.L       @(40,R15),R3
    0000005E 123A                   MOV.L       R3,@(40,R2)
      Element.cp    18        AllCompo = (Component*)Compo;
    00000060 62F2                   MOV.L       @R15,R2
    00000062 53F9                   MOV.L       @(36,R15),R3
    00000064 123B                   MOV.L       R3,@(44,R2)
    00000066              L253:                             
    00000066 60F2                   MOV.L       @R15,R0
      Element.cp    19    }
    00000068 7F10                   ADD         #16,R15
    0000006A 4F26                   LDS.L       @R15+,PR
    0000006C 000B                   RTS
    0000006E 0009                   NOP
      Element.cp    20    void NewElement::afficher(int X,int Y)
    00000070              _afficher__10NewElementFiT1:     ; function: NewElement::afficher(int, int)
                                                           ; frame size=20
    00000070 2FE6                   MOV.L       R14,@-R15
    00000072 6E43                   MOV         R4,R14
    00000074 4F22                   STS.L       PR,@-R15
    00000076 7FF8                   ADD         #-8,R15
    00000078 2F52                   MOV.L       R5,@R15
    0000007A 1F61                   MOV.L       R6,@(4,R15)
      Element.cp    21    {
      Element.cp    22        ML_bmp_or_cl((const unsigned char*)Img, x-X, y-Y, w, h);
    0000007C 53E9                   MOV.L       @(36,R14),R3
    0000007E 2F36                   MOV.L       R3,@-R15
    00000080 57E8                   MOV.L       @(32,R14),R7
    00000082 53F2                   MOV.L       @(8,R15),R3
    00000084 56E7                   MOV.L       @(28,R14),R6
    00000086 3638                   SUB         R3,R6
    00000088 53F1                   MOV.L       @(4,R15),R3
    0000008A 55E6                   MOV.L       @(24,R14),R5
    0000008C 3538                   SUB         R3,R5
    0000008E D304                   MOV.L       L257+4,R3  ; _ML_bmp_or_cl
    00000090 430B                   JSR         @R3
    00000092 64E2                   MOV.L       @R14,R4
      Element.cp    23    }
    00000094 7F0C                   ADD         #12,R15
    00000096 4F26                   LDS.L       @R15+,PR
    00000098 000B                   RTS
    0000009A 6EF6                   MOV.L       @R15+,R14
    0000009C              L257:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Jan-2021 15:45:47  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009C <00000000>             .DATA.L     ___nw__FUl
    000000A0 <00000000>             .DATA.L     _ML_bmp_or_cl
      Element.cp    24    /*
      Element.cp    25    void NewElement::attaquer(Perso& cible)
      Element.cp    26    {
      Element.cp    27        cible.morfle(m_attaque);
      Element.cp    28    }
      Element.cp    29    
      Element.cp    30    void NewElement::morfle(int degat)
      Element.cp    31    {
      Element.cp    32        m_vie -= degat;
      Element.cp    33        if (m_vie < 0)m_vie = 0;
      Element.cp    34    }*/
      Element.cp    35    















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 05-Jan-2021 15:45:47  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       35



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000A4 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000A4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            2
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:             7






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\leofa\AppData\Local\Temp\hmkE5C4.tmp 

