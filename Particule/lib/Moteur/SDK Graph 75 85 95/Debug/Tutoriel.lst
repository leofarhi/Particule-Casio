SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\leofa\OneDrive\Documents\PycharmProjects\Particule-Casio\Particule\lib\Moteur\SDK Graph 75 85 95\Tutoriel.cpp

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Tutoriel.c     1    /*****************************************************************/
      Tutoriel.c     2    /*                                                               */
      Tutoriel.c     3    /*   CASIO fx-9860G SDK Library                                  */
      Tutoriel.c     4    /*                                                               */
      Tutoriel.c     5    /*   File name : [ProjectName].c                                 */
      Tutoriel.c     6    /*                                                               */
      Tutoriel.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
      Tutoriel.c     8    /*                                                               */
      Tutoriel.c     9    /*****************************************************************/
      Tutoriel.c    10    
      Tutoriel.c    11    extern "C"
      Tutoriel.c    12    {
      Tutoriel.c    13    #include "keybios.h"
      Tutoriel.c    14    #include "fxlib.h"
      Tutoriel.c    15    #include <stdio.h>
      Tutoriel.c    16    #include "stdio.h"
      Tutoriel.c    17    #include "stdlib.h"
      Tutoriel.c    18    
      Tutoriel.c    19    #include "string.h"
      Tutoriel.c    20    #include "time.h"
      Tutoriel.c    21    
      Tutoriel.c    22    
      Tutoriel.c    23    
      Tutoriel.c    24    
      Tutoriel.c    25    }
      Tutoriel.c    26    #include "usefull.h"
      Tutoriel.c    27    
      Tutoriel.c    28    //****************************************************************************
      Tutoriel.c    29    //  AddIn_main (Sample program main function)
      Tutoriel.c    30    //
      Tutoriel.c    31    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
      Tutoriel.c    32    //                        : 0 = This application is launched by a strip in eACT application.
      Tutoriel.c    33    //
      Tutoriel.c    34    //              OptionNum : Strip number (0~3)
      Tutoriel.c    35    //                         (This parameter is only used when isAppli parameter is 0.)
      Tutoriel.c    36    //
      Tutoriel.c    37    //  retval  :   1 = No error / 0 = Error
      Tutoriel.c    38    //
      Tutoriel.c    39    //****************************************************************************
      Tutoriel.c    40    #include "Announcement.h"
      Tutoriel.c    41    #include "ParticuleEngine.h"
      Tutoriel.c    42    #include "List.h"
      Tutoriel.c    43    //#include "ClassParticule.h"
      Tutoriel.c    44    //#include "string.h"
      Tutoriel.c    45    #include "MonochromeLib.h"
      Tutoriel.c    46    #include "Ressources.h"
      Tutoriel.c    47    
      Tutoriel.c    48    
      Tutoriel.c    49    
      Tutoriel.c    50    int main() {
P   00000000              _main:                           ; function: main
                                                           ; frame size=20
    00000000 7FEC                   ADD         #-20,R15
      Tutoriel.c    51        SceneManager sceneManager;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000002 E400                   MOV         #0,R4
    00000004 1F44                   MOV.L       R4,@(16,R15)
    00000006 1F42                   MOV.L       R4,@(8,R15)
      Tutoriel.c    52        //reference croise
      Tutoriel.c    53        sceneManager.LoadScene(0);
    00000008 A010                   BRA         L357
    0000000A 1F43                   MOV.L       R4,@(12,R15)
    0000000C              L358:                             
    0000000C 55F3                   MOV.L       @(12,R15),R5
    0000000E 6352                   MOV.L       @R5,R3
    00000010 52F2                   MOV.L       @(8,R15),R2
    00000012 3250                   CMP/EQ      R5,R2
    00000014 8B02                   BF          L359
    00000016 1F42                   MOV.L       R4,@(8,R15)
    00000018 A005                   BRA         L360
    0000001A 1F43                   MOV.L       R4,@(12,R15)
    0000001C              L359:                             
    0000001C 52F3                   MOV.L       @(12,R15),R2
    0000001E 5322                   MOV.L       @(8,R2),R3
    00000020 1F33                   MOV.L       R3,@(12,R15)
    00000022 6233                   MOV         R3,R2
    00000024 1241                   MOV.L       R4,@(4,R2)
    00000026              L360:                             
    00000026 53F4                   MOV.L       @(16,R15),R3
    00000028 73FF                   ADD         #-1,R3
    0000002A 1F34                   MOV.L       R3,@(16,R15)
    0000002C              L357:                             
    0000002C 52F4                   MOV.L       @(16,R15),R2
    0000002E 4215                   CMP/PL      R2
    00000030 89EC                   BT          L358
    00000032 E500                   MOV         #0,R5
    00000034 64F3                   MOV         R15,R4
    00000036 B0C0                   BSR         __$GetSceneInBuild__12SceneManagerFi
    00000038 7404                   ADD         #4,R4
    0000003A 2F02                   MOV.L       R0,@R15
    0000003C D315                   MOV.L       L404,R3    ; ___nw__FUl
    0000003E 430B                   JSR         @R3
    00000040 E40C                   MOV         #12,R4
    00000042 2008                   TST         R0,R0
    00000044 8D06                   BT/S        L361
    00000046 6E03                   MOV         R0,R14
    00000048 D313                   MOV.L       L404+4,R3  ; ___memzero
    0000004A E50C                   MOV         #12,R5
    0000004C 430B                   JSR         @R3
    0000004E 64E3                   MOV         R14,R4
    00000050 A001                   BRA         L362
    00000052 64E3                   MOV         R14,R4
    00000054              L361:                             
    00000054 E400                   MOV         #0,R4
    00000056              L362:                             
    00000056 63F2                   MOV.L       @R15,R3
    00000058 2432                   MOV.L       R3,@R4
    0000005A 52F4                   MOV.L       @(16,R15),R2
    0000005C 7201                   ADD         #1,R2
    0000005E 1F24                   MOV.L       R2,@(16,R15)
    00000060 53F2                   MOV.L       @(8,R15),R3
    00000062 2338                   TST         R3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000064 8B01                   BF          L363
    00000066 A004                   BRA         L339
    00000068 1F42                   MOV.L       R4,@(8,R15)
    0000006A              L363:                             
    0000006A 53F3                   MOV.L       @(12,R15),R3
    0000006C 1432                   MOV.L       R3,@(8,R4)
    0000006E 52F3                   MOV.L       @(12,R15),R2
    00000070 1241                   MOV.L       R4,@(4,R2)
    00000072              L339:
    00000072 1F43                   MOV.L       R4,@(12,R15)
    00000074 DC09                   MOV.L       L404+8,R12 ; _ML_clear_vram
    00000076 DD0A                   MOV.L       L404+12,R13; _Sleep
    00000078 DE0A                   MOV.L       L404+16,R14; _ML_display_vram
      Tutoriel.c    54    
      Tutoriel.c    55        while (true)
    0000007A              L366:                             
      Tutoriel.c    56        {
      Tutoriel.c    57            ML_clear_vram();
    0000007A 4C0B                   JSR         @R12
    0000007C 0009                   NOP
      Tutoriel.c    58            sceneManager.UpdateScene();
    0000007E 64F3                   MOV         R15,R4
    00000080 B086                   BSR         __$UpdateScene__12SceneManagerFv
    00000082 7404                   ADD         #4,R4
      Tutoriel.c    59    
      Tutoriel.c    60            Sleep(100);
    00000084 4D0B                   JSR         @R13
    00000086 E464                   MOV         #100,R4
      Tutoriel.c    61            ML_display_vram();
    00000088 4E0B                   JSR         @R14
    0000008A 0009                   NOP
    0000008C AFF5                   BRA         L366
    0000008E 0009                   NOP
      Tutoriel.c    62        }
      Tutoriel.c    63        return 1;
      Tutoriel.c    64    }
      Tutoriel.c    65    
      Tutoriel.c    66    extern "C"
      Tutoriel.c    67    {
      Tutoriel.c    68    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000090              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=0
      Tutoriel.c    69    {
      Tutoriel.c    70        return main();
    00000090 AFB6                   BRA         _main
    00000092 0009                   NOP
    00000094              L404:                             
    00000094 <00000000>             .DATA.L     ___nw__FUl
    00000098 <00000000>             .DATA.L     ___memzero
    0000009C <00000000>             .DATA.L     _ML_clear_vram
    000000A0 <00000000>             .DATA.L     _Sleep
    000000A4 <00000000>             .DATA.L     _ML_display_vram
      Tutoriel.c    71    }
      Tutoriel.c    72    
      Tutoriel.c    73    
      Tutoriel.c    74    
      Tutoriel.c    75    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Tutoriel.c    76    //****************************************************************************
      Tutoriel.c    77    //**************                                              ****************
      Tutoriel.c    78    //**************                 Notice!                      ****************
      Tutoriel.c    79    //**************                                              ****************
      Tutoriel.c    80    //**************  Please do not change the following source.  ****************
      Tutoriel.c    81    //**************                                              ****************
      Tutoriel.c    82    //****************************************************************************
      Tutoriel.c    83    
      Tutoriel.c    84    
      Tutoriel.c    85    #pragma section _BR_Size
      Tutoriel.c    86    unsigned long BR_Size;
      Tutoriel.c    87    #pragma section
      Tutoriel.c    88    
      Tutoriel.c    89    
      Tutoriel.c    90    #pragma section _TOP
      Tutoriel.c    91    
      Tutoriel.c    92    //****************************************************************************
      Tutoriel.c    93    //  InitializeSystem
      Tutoriel.c    94    //
      Tutoriel.c    95    //  param   :   isAppli   : 1 = Application / 0 = eActivity
      Tutoriel.c    96    //              OptionNum : Option Number (only eActivity)
      Tutoriel.c    97    //
      Tutoriel.c    98    //  retval  :   1 = No error / 0 = Error
      Tutoriel.c    99    //
      Tutoriel.c   100    //****************************************************************************
      Tutoriel.c   101    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      Tutoriel.c   102    {
      Tutoriel.c   103        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L405+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L405:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      Tutoriel.c   104    }
      Tutoriel.c   105    
      Tutoriel.c   106    #pragma section
      Tutoriel.c   107    }
P   000000A8              __$Update__10GameObjectFv:       ; function: GameObject::Update()
                                                           ; frame size=28
    000000A8 2FE6                   MOV.L       R14,@-R15
    000000AA 2FD6                   MOV.L       R13,@-R15
    000000AC 2FC6                   MOV.L       R12,@-R15
    000000AE 6D43                   MOV         R4,R13
    000000B0 2FB6                   MOV.L       R11,@-R15
    000000B2 2FA6                   MOV.L       R10,@-R15
    000000B4 4F22                   STS.L       PR,@-R15
    000000B6 7FFC                   ADD         #-4,R15
    000000B8 9C70                   MOV.W       L406,R12   ; H'0354
    000000BA 5EDD                   MOV.L       @(52,R13),R14
    000000BC 2FE2                   MOV.L       R14,@R15
    000000BE 5EE2                   MOV.L       @(8,R14),R14
    000000C0 64F2                   MOV.L       @R15,R4
    000000C2 3ECC                   ADD         R12,R14
    000000C4 53E2                   MOV.L       @(8,R14),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C6 62E2                   MOV.L       @R14,R2
    000000C8 430B                   JSR         @R3
    000000CA 342C                   ADD         R2,R4
    000000CC A00C                   BRA         L370
    000000CE EE00                   MOV         #0,R14
    000000D0              L371:                             
    000000D0 65E3                   MOV         R14,R5
    000000D2 64D3                   MOV         R13,R4
    000000D4 B01E                   BSR         __$get__24List__tm__12_P9ComponentFi_Z1Z
    000000D6 740C                   ADD         #12,R4
    000000D8 5B02                   MOV.L       @(8,R0),R11
    000000DA 6A03                   MOV         R0,R10
    000000DC 3BCC                   ADD         R12,R11
    000000DE 53B2                   MOV.L       @(8,R11),R3
    000000E0 64B2                   MOV.L       @R11,R4
    000000E2 430B                   JSR         @R3
    000000E4 34AC                   ADD         R10,R4
    000000E6 7E01                   ADD         #1,R14
    000000E8              L370:                             
    000000E8 52D5                   MOV.L       @(20,R13),R2
    000000EA 3E23                   CMP/GE      R2,R14
    000000EC 8BF0                   BF          L371
    000000EE 7F04                   ADD         #4,R15
    000000F0 4F26                   LDS.L       @R15+,PR
    000000F2 6AF6                   MOV.L       @R15+,R10
    000000F4 6BF6                   MOV.L       @R15+,R11
    000000F6 6CF6                   MOV.L       @R15+,R12
    000000F8 6DF6                   MOV.L       @R15+,R13
    000000FA 000B                   RTS
    000000FC 6EF6                   MOV.L       @R15+,R14
    000000FE              __$get_node__24List__tm__12_P9ComponentFi_P15Node__tm__4_Z1Z:
                                                           ; function: Node<T1> *List<T1>::get_node(int) [with T1=Component *]
                                                           ; frame size=0
    000000FE E700                   MOV         #0,R7
    00000100 A002                   BRA         L373
    00000102 6642                   MOV.L       @R4,R6
    00000104              L374:                             
    00000104 5661                   MOV.L       @(4,R6),R6
    00000106 7701                   ADD         #1,R7
    00000108              L373:                             
    00000108 2668                   TST         R6,R6
    0000010A 8901                   BT          L375
    0000010C 3750                   CMP/EQ      R5,R7
    0000010E 8BF9                   BF          L374
    00000110              L375:                             
    00000110 000B                   RTS
    00000112 6063                   MOV         R6,R0
    00000114              __$get__24List__tm__12_P9ComponentFi_Z1Z:
                                                           ; function: T1 List<T1>::get(int) [with T1=Component *]
                                                           ; frame size=4
    00000114 4F22                   STS.L       PR,@-R15
    00000116 E3FF                   MOV         #-1,R3
    00000118 3533                   CMP/GE      R3,R5
    0000011A 8B04                   BF          L340
    0000011C BFEF                   BSR         __$get_node__24List__tm__12_P9ComponentFi_P15Node__tm__4_Z1Z
    0000011E 0009                   NOP
    00000120 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000122 2448                   TST         R4,R4
    00000124 8B02                   BF          L379
    00000126              L340:
    00000126 4F26                   LDS.L       @R15+,PR
    00000128 000B                   RTS
    0000012A E000                   MOV         #0,R0
    0000012C              L379:                             
    0000012C 6042                   MOV.L       @R4,R0
    0000012E              L378:                             
    0000012E 4F26                   LDS.L       @R15+,PR
    00000130 000B                   RTS
    00000132 0009                   NOP
    00000134              __$Update__5SceneFv:             ; function: Scene::Update()
                                                           ; frame size=12
    00000134 2FE6                   MOV.L       R14,@-R15
    00000136 2FD6                   MOV.L       R13,@-R15
    00000138 4F22                   STS.L       PR,@-R15
    0000013A 6D43                   MOV         R4,R13
    0000013C A006                   BRA         L380
    0000013E EE00                   MOV         #0,R14
    00000140              L381:                             
    00000140 65E3                   MOV         R14,R5
    00000142 B015                   BSR         __$get__26List__tm__14_P10GameObjectFi_Z1Z
    00000144 64D3                   MOV         R13,R4
    00000146 BFAF                   BSR         __$Update__10GameObjectFv
    00000148 6403                   MOV         R0,R4
    0000014A 7E01                   ADD         #1,R14
    0000014C              L380:                             
    0000014C 52D2                   MOV.L       @(8,R13),R2
    0000014E 3E23                   CMP/GE      R2,R14
    00000150 8BF6                   BF          L381
    00000152 4F26                   LDS.L       @R15+,PR
    00000154 6DF6                   MOV.L       @R15+,R13
    00000156 000B                   RTS
    00000158 6EF6                   MOV.L       @R15+,R14
    0000015A              __$get_node__26List__tm__14_P10GameObjectFi_P15Node__tm__4_Z1Z:
                                                           ; function: Node<T1> *List<T1>::get_node(int) [with T1=GameObject *]
                                                           ; frame size=0
    0000015A E700                   MOV         #0,R7
    0000015C A002                   BRA         L383
    0000015E 6642                   MOV.L       @R4,R6
    00000160              L384:                             
    00000160 5661                   MOV.L       @(4,R6),R6
    00000162 7701                   ADD         #1,R7
    00000164              L383:                             
    00000164 2668                   TST         R6,R6
    00000166 8901                   BT          L385
    00000168 3750                   CMP/EQ      R5,R7
    0000016A 8BF9                   BF          L384
    0000016C              L385:                             
    0000016C 000B                   RTS
    0000016E 6063                   MOV         R6,R0
    00000170              __$get__26List__tm__14_P10GameObjectFi_Z1Z:
                                                           ; function: T1 List<T1>::get(int) [with T1=GameObject *]
                                                           ; frame size=4
    00000170 4F22                   STS.L       PR,@-R15
    00000172 E3FF                   MOV         #-1,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000174 3533                   CMP/GE      R3,R5
    00000176 8B04                   BF          L341
    00000178 BFEF                   BSR         __$get_node__26List__tm__14_P10GameObjectFi_P15Node__tm__4_Z1Z
    0000017A 0009                   NOP
    0000017C 6403                   MOV         R0,R4
    0000017E 2448                   TST         R4,R4
    00000180 8B02                   BF          L389
    00000182              L341:
    00000182 4F26                   LDS.L       @R15+,PR
    00000184 000B                   RTS
    00000186 E000                   MOV         #0,R0
    00000188              L389:                             
    00000188 6042                   MOV.L       @R4,R0
    0000018A              L388:                             
    0000018A 4F26                   LDS.L       @R15+,PR
    0000018C 000B                   RTS
    0000018E 0009                   NOP
    00000190              __$UpdateScene__12SceneManagerFv:
                                                           ; function: SceneManager::UpdateScene()
                                                           ; frame size=12
    00000190 2FE6                   MOV.L       R14,@-R15
    00000192 2FD6                   MOV.L       R13,@-R15
    00000194 4F22                   STS.L       PR,@-R15
    00000196 6D43                   MOV         R4,R13
    00000198 A008                   BRA         L390
    0000019A EE00                   MOV         #0,R14
    0000019C              L406:                             
    0000019C 0354                   .DATA.W     H'0354
    0000019E              L391:                             
    0000019E 65E3                   MOV         R14,R5
    000001A0 64D3                   MOV         R13,R4
    000001A2 B036                   BSR         __$get__19List__tm__8_P5SceneFi_Z1Z
    000001A4 7404                   ADD         #4,R4
    000001A6 BFC5                   BSR         __$Update__5SceneFv
    000001A8 6403                   MOV         R0,R4
    000001AA 7E01                   ADD         #1,R14
    000001AC              L390:                             
    000001AC 52D3                   MOV.L       @(12,R13),R2
    000001AE 3E23                   CMP/GE      R2,R14
    000001B0 8BF5                   BF          L391
    000001B2 4F26                   LDS.L       @R15+,PR
    000001B4 6DF6                   MOV.L       @R15+,R13
    000001B6 000B                   RTS
    000001B8 6EF6                   MOV.L       @R15+,R14
    000001BA              __$GetSceneInBuild__12SceneManagerFi:
                                                           ; function: SceneManager::GetSceneInBuild(int)
                                                           ; frame size=12
    000001BA 2FE6                   MOV.L       R14,@-R15
    000001BC 4F22                   STS.L       PR,@-R15
    000001BE EE00                   MOV         #0,R14
    000001C0 7FFC                   ADD         #-4,R15
    000001C2 63E3                   MOV         R14,R3
    000001C4 2338                   TST         R3,R3
    000001C6 8F06                   BF/S        L394
    000001C8 2FE2                   MOV.L       R14,@R15
    000001CA D31A                   MOV.L       L407+2,R3  ; ___nw__FUl
    000001CC 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CE E42C                   MOV         #44,R4
    000001D0 2008                   TST         R0,R0
    000001D2 8D0E                   BT/S        L395
    000001D4 2F02                   MOV.L       R0,@R15
    000001D6              L394:                             
    000001D6 E300                   MOV         #0,R3
    000001D8 62F2                   MOV.L       @R15,R2
    000001DA 1232                   MOV.L       R3,@(8,R2)
    000001DC 62F2                   MOV.L       @R15,R2
    000001DE 22E2                   MOV.L       R14,@R2
    000001E0 63F2                   MOV.L       @R15,R3
    000001E2 E200                   MOV         #0,R2
    000001E4 13E1                   MOV.L       R14,@(4,R3)
    000001E6 63F2                   MOV.L       @R15,R3
    000001E8 132A                   MOV.L       R2,@(40,R3)
    000001EA 63F2                   MOV.L       @R15,R3
    000001EC 13E8                   MOV.L       R14,@(32,R3)
    000001EE 63F2                   MOV.L       @R15,R3
    000001F0 13E9                   MOV.L       R14,@(36,R3)
    000001F2              L395:                             
    000001F2 60F2                   MOV.L       @R15,R0
    000001F4 7F04                   ADD         #4,R15
    000001F6 4F26                   LDS.L       @R15+,PR
    000001F8 000B                   RTS
    000001FA 6EF6                   MOV.L       @R15+,R14
    000001FC              __$get_node__19List__tm__8_P5SceneFi_P15Node__tm__4_Z1Z:
                                                           ; function: Node<T1> *List<T1>::get_node(int) [with T1=Scene *]
                                                           ; frame size=0
    000001FC E700                   MOV         #0,R7
    000001FE A002                   BRA         L397
    00000200 6642                   MOV.L       @R4,R6
    00000202              L398:                             
    00000202 7701                   ADD         #1,R7
    00000204 5661                   MOV.L       @(4,R6),R6
    00000206              L397:                             
    00000206 2668                   TST         R6,R6
    00000208 8901                   BT          L399
    0000020A 3750                   CMP/EQ      R5,R7
    0000020C 8BF9                   BF          L398
    0000020E              L399:                             
    0000020E 000B                   RTS
    00000210 6063                   MOV         R6,R0
    00000212              __$get__19List__tm__8_P5SceneFi_Z1Z:
                                                           ; function: T1 List<T1>::get(int) [with T1=Scene *]
                                                           ; frame size=4
    00000212 E3FF                   MOV         #-1,R3
    00000214 4F22                   STS.L       PR,@-R15
    00000216 3533                   CMP/GE      R3,R5
    00000218 8B04                   BF          L342
    0000021A BFEF                   BSR         __$get_node__19List__tm__8_P5SceneFi_P15Node__tm__4_Z1Z
    0000021C 0009                   NOP
    0000021E 6403                   MOV         R0,R4
    00000220 2448                   TST         R4,R4
    00000222 8B02                   BF          L403
    00000224              L342:
    00000224 4F26                   LDS.L       @R15+,PR
    00000226 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000228 E000                   MOV         #0,R0
    0000022A              L403:                             
    0000022A 6042                   MOV.L       @R4,R0
    0000022C              L402:                             
    0000022C 4F26                   LDS.L       @R15+,PR
    0000022E 000B                   RTS
    00000230 0009                   NOP
    00000232              L407:                             
    00000232 0000                   .DATA.W     0
    00000234 <00000000>             .DATA.L     ___nw__FUl
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1

















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 15-May-2021 18:55:24  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        49




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      107



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000238 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000248 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            6
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            49






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\leofa\AppData\Local\Temp\hmkF645.tmp 

