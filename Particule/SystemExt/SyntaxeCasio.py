"Xmin"
"Xmax"
"Xscl"
"Xdot"
"Ymin"
"Ymax"
"Yscl"
"Tθmin"
"Tθmax"
"Tθptch"
"Xfct"
"Yfct"
"&#7f5f;"
"&#f94f;"
"&#f941;"
"&#f942;"
"&#f7fe;"
"&#f7de;"
""
""
"t"
"t"
""
"F Start"
"F End"
"F pitch"
"#"
"~"
"$"
"Str "
"List "
"List->Mat("
"Dim "
"Fill("
"Seq("
"Min("
"Max("
"Mean("
"Augment("
"Sum "
"Prod "
"&#7f5c;"
"Mat "
"Mat->List("
"Det "
"Trn "
"Augment("
"Identity "
"Dim "
"Fill("
"&#7f5b;"
"&#7f58;"
"&#7f59;"
"&#7f5a;"
"Vct "
"DotP("
"CrossP("
"Angle("
"UnitV("
"Norm("
""
"Abs "
"Arg "
"Conjg "
"ReP "
"ImP "
"->r∠θ"
"->a+b"
"∫("
"Σ("
"logab("
" Int/ "
" Rmdr "
"&#f90f;"
"_"
"&#f90e;"
"&amp;"
"#"
"%"
"@"
"sinh "
"cosh "
"tanh "
"asinh "
"acosh "
"atanh "
"&fact;"
""
""
"Ran# "
"RanInt#("
"RanNorm#("
"RanBin#("
"RanList#("
"Abs "
"Int "
"Frac "
"Rnd"
"Intg "
"RndFix("
"GCD("
"LCM("
"MOD("
"°"
""
""
""
"Pol("
"Rec("
"->DMS"
"&milli;"
"µ"
""
"&pico;"
"&femto;"
"&kilo;"
""
""
""
""
""
"StoPict "
"RclPict "
"f"
" And "
" Or "
"Not "
" Xor "
"&bitwiseand;"
"&bitwiseor;"
"&bitwiseNot;"
"&bitwisexor;"
"&#f79d;"
"RclCapt "
"If  :Then"
"Else "
"IfEnd"
"&#f70f;"
"For "
"To "
"Step "
"Next"
"While "
"WhileEnd"
"Do"
"LpWhile "
"&#f7ea;"
"&#f7eb;"
"&#f7ec;"
"Break"
"&#f7ed;"
"Prog "
"Return"
"Break"
"Stop"
"&#f7f1;"
"&#fa;"
"&#f717;"
"&#f737;"
"&#f738;"
"&#f739;"
"Lbl "
"Goto "
" => "
"Isz "
"Dsz "
"Menu "
"?"
"◢"
"ClrText"
"ClrGraph"
"ClrList "
"ClrMat "
"ClrVct "
"DrawStat"
"DrawGraph"
"DispF-Tbl"
"&#f7e4;"
" = "
" != "
" > "
" < "
" >= "
" <= "
"Locate "
"GetKey"
"Send("
"Receive("
"&#7f9f;"
"Send38k "
"Receive38k "
"OpenComport38k"
"CloseComport38k"
"&#f7dd;"
"&#7ff5;"
"&#f7ee;"
"&#f7ef;"
"&#f7df;"
" : "
"StrJoin("
"StrLen("
"StrCmp("
"StrSrc("
"&#f949;"
"StrLeft("
"StrRight("
"StrMid("
"Exp->Str("
"Exp("
"StrUpr("
"StrLwr("
"StrInv("
"StrShift("
"StrRotate("
"$"
"Str "
"&#f940;"
"&#f943;"
"%"
"#"
"&#f944;"
"&#f945;"
"&#f948;"
"&#f946;"
"&#f947;"
"&#f94d;"
"&#f950;"
"&#f949;"
"&#f7f4;"
"&#f7f5;"
"&#f7f6;"
"&#7ff6;"
"&#7ff8;"
"&#7ffa;"
""
"&amp;"
